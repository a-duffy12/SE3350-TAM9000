{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;ACP5D,MAAM,YAAY;IAGvB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAFlC,UAAK,GAAG,YAAY,CAAC;IAEiB,CAAC;IAEvC,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;;wEAPU,YAAY;4FAAZ,YAAY;QCRzB,kEACO;QACP,uEACI;QAAA,yEACI;QAAA,yEACI;QAAA,uEAA4C;QAAA,+DAAI;QAAA,4DAAI;QAAA,gEACpD;QAAA,uEAAiD;QAAA,gEAAK;QAAA,4DAAI;QAAA,gEAC9D;QAAA,4DAAM;QACV,4DAAM;QAEN,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,0EACI;QAAA,4EAA+B;QACnC,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAO;;;;;;;;;;;;;;AClBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACb;AACW;AAET;AACU;AACR;;;AAgB1C,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,0DAAW;YACX,qEAAgB;YAChB,6DAAgB;SACjB;mIAIU,SAAS,mBAZlB,2DAAY;QACZ,qEAAc,aAGd,uEAAa;QACb,0DAAW;QACX,qEAAgB;;;;;;;;;;;;;ACjBpB;AAAA;AAAA;AAAA;AAAuD;AAEE;AAEzD,MAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,6BAA6B;IAC7B,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;CACpD,CAAC;AAEK,MAAM,gBAAgB,GAAG,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACAtD,MAAM,cAAc;IAEzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAIpC,WAAM,GAAG,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;QAChD,YAAO,GAAG,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QAErC,UAAK,GAAG,EAAE,CAAC;QACX,aAAQ,GAAG,EAAE,CAAC;IAR0B,CAAC;IAUzC,SAAS;QACP,MAAM,IAAI,GAAG;YACX,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAU,oBAAoB,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YAC3F,KAAK,CAAC,6BAA6B,CAAC,CAAC;QACvC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;YACR,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,QAAQ;IACR,CAAC;;4EA1BU,cAAc;8FAAd,cAAc;QCV3B,qEAAI;QAAA,+EAAoB;QAAA,4DAAK;QAE7B,mEAAO;QAAA,2EAAwD;QAApB,iLAAmB;QAAvD,4DAAwD;QAAA,gEAAI;QAAA,gEACnE;QAAA,uEAAU;QAAA,2EAA8E;QAAvB,oLAAsB;QAA7E,4DAA8E;QAAA,gEAAI;QAAA,gEAE5F;QAAA,6EAA8B;QAAtB,uIAAS,eAAW,IAAC;QAAC,kEAAM;QAAA,4DAAS;;QAHF,0DAAmB;QAAnB,8EAAmB;QACG,0DAAsB;QAAtB,iFAAsB;;;;;;;;;;;;;;;;;;;;ACHxC;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ta-matcher';\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.router.navigate(['']);\n  }\n}\n","<head>\n</head>\n<body>\n    <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n        <div class=\"navbar-nav\">\n            <a class=\"nav-item nav-link\" routerLink=\"/\">Home</a><br>\n            <a class=\"nav-item nav-link\" routerLink=\"/login\">Login</a><br>\n        </div>\n    </nav>\n    \n    <div class=\"jumbotron\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-sm-8 offset-sm-2\">\n                    <router-outlet></router-outlet>\n                </div>\n            </div>\n        </div>\n    </div>\n</body>\n\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { appRoutingModule } from './app.routing';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    appRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n    { path: 'login', component: LoginComponent },\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '', pathMatch: 'full' }\r\n];\r\n\r\nexport const appRoutingModule = RouterModule.forRoot(routes);","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Account } from '../account'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private http: HttpClient) { }\n\n  account: Account | undefined;\n\n  header = { 'Content-Type': 'application/json' };\n  options = ({ headers: this.header });\n\n  email = '';\n  password = '';\n\n  loginUser(): void {\n    const body = {\n      email: this.email,\n      password: this.password\n    };\n\n    this.http.post<Account>(`/api/users/login/${this.email}`, body, this.options).subscribe(() => {\n      alert('User logged in successfully');\n    }, (err => {\n      alert(err.error);\n    }));\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Log in to an account</h2>\n\nEmail: <input placeholder=\"enter email...\" [(ngModel)]=\"email\"><br><br>\nPassword: <input placeholder=\"enter password...\" type=\"password\" [(ngModel)]=\"password\"><br><br>\n\n<button (click)=\"loginUser()\">Log in</button>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}