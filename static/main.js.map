{"version":3,"sources":["./src/app/create-question/create-question.component.ts","./src/app/create-question/create-question.component.html","./src/environments/environment.ts","./src/app/course-search/course-search.component.html","./src/app/course-search/course-search.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/instructor-view/instructor-view.component.ts","./src/app/instructor-view/instructor-view.component.html","./src/app/application/application.component.ts","./src/app/application/application.component.html","./src/app/matching/matching.component.ts","./src/app/matching/matching.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/share-data.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/validator.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { ShareDataService } from '../share-data.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Validator } from '../validator.service';\r\nimport { Subscription, interval, Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-create-question',\r\n  templateUrl: './create-question.component.html',\r\n  styleUrls: ['./create-question.component.css']\r\n})\r\nexport class CreateQuestionComponent implements OnInit {\r\n  @Input()\r\n  id: any;\r\n  boolean = [{display: \"Yes\", value: true}, {display: \"No\", value: false}]\r\n\r\n  header = { 'Content-Type': 'application/json' };\r\n  options = ({ headers: this.header });\r\n\r\n  sub: Subscription;\r\n  activeUser = '';\r\n  rdata: any;\r\n\r\n  inst = false;\r\n  admn = false;\r\n\r\n  catalogq = ''; // make upper case\r\n  subjectq = ''; // make upper case\r\n  extensionq = ''; // make upper case\r\n\r\n  constructor(private http: HttpClient, private val: Validator, public data: ShareDataService)\r\n  {\r\n    // every second, update the active user variable\r\n    this.sub = interval(1000).subscribe(() => {\r\n      this.activeUser = this.val.getActiveUser();\r\n\r\n      if (this.activeUser)\r\n      {\r\n        // check to see if this user is an instructor\r\n        this.http.get(`/api/users/${this.activeUser}`).subscribe((data:any) => {\r\n\r\n          if (data.type == \"instructor\")\r\n          {\r\n            this.inst = true;\r\n            this.admn = false;\r\n          }\r\n          else if (data.type == \"admin\")\r\n          {\r\n            this.admn = true;\r\n            this.inst = false;\r\n          }\r\n        });\r\n      }\r\n      else\r\n      {\r\n        this.inst = false;\r\n        this.admn = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  exportQuestions()\r\n  {\r\n    window.open('/api/download');\r\n    // this.http.get(`/api/download`).subscribe((data:any) => {\r\n    //   console.log(data);\r\n    // })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"inst\">\r\n  <h2>Export Questions</h2>\r\n  <button (click)=\"exportQuestions()\">Export</button>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<h2>View all courses</h2><br><br>\r\n<button (click)=\"searchAll()\">View All</button>\r\n<div *ngIf=\"cdata1\">\r\n  <p>Displaying search results</p>\r\n  <ul class=\"list\">\r\n    <li *ngFor=\"let c of cdata1\" class=\"list-li\">\r\n      <span>{{c.courseName}} - {{c.desc}}</span>\r\n      <span>Taught by: {{c.instructor}} ({{c.instructorEmail}})</span>\r\n      <span>Enrollment: {{c.enrolled}} student</span>\r\n      <span>TA hours available: {{c.hours}} hours</span>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n<h2>Search by course name</h2><br><br>\r\nSubject: <input placeholder=\"ex. SE\" [(ngModel)]=\"subject\"><br><br>\r\nCatalog: <input placeholder=\"ex. 3350\" [(ngModel)]=\"catalog\"><br><br>\r\nExtension: <input placeholder=\"ex. B\" [(ngModel)]=\"extension\"><br><br>\r\n<button (click)=\"searchName()\">Search</button>\r\n<div *ngIf=\"cdata2\">\r\n  <p>Displaying search results</p>\r\n  <ul class=\"list\">\r\n    <li class=\"list-li\">\r\n      <span>{{cdata2.courseName}} - {{cdata2.desc}}</span>\r\n      <span>Taught by: {{cdata2.instructor}} ({{cdata2.instructorEmail}})</span>\r\n      <span>Enrollment: {{cdata2.enrolled}} student</span>\r\n      <span>TA hours available: {{cdata2.hours}} hours</span>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n<h2>Search by course description</h2><br><br>\r\nSearch Term: <input placeholder=\"Enter keyword(s)...\" [(ngModel)]=\"key\"><br><br>\r\n<button (click)=\"searchDesc()\">Search</button><br><br>\r\n<div *ngIf=\"cdata3\">\r\n  <p>Displaying search results</p>\r\n  <ul class=\"list\">\r\n    <li *ngFor=\"let c of cdata3\" class=\"list-li\">\r\n      <span>{{c.courseName}} - {{c.desc}}</span>\r\n      <span>Taught by: {{c.instructor}} ({{c.instructorEmail}})</span>\r\n      <span>Enrollment: {{c.enrolled}} student</span>\r\n      <span>TA hours available: {{c.hours}} hours</span>\r\n    </li>\r\n  </ul>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Validator } from '../validator.service';\r\n\r\n@Component({\r\n  selector: 'app-course-search',\r\n  templateUrl: './course-search.component.html',\r\n  styleUrls: ['./course-search.component.css']\r\n})\r\nexport class CourseSearchComponent implements OnInit {\r\n\r\n  header = { 'Content-Type': 'application/json' };\r\n  options = ({ headers: this.header });\r\n\r\n  std = false;\r\n  cdata1: any;\r\n  cdata2: any;\r\n  cdata3: any;\r\n  subject = '';\r\n  catalog = '';\r\n  extension = '';\r\n  key = '';\r\n\r\n  constructor(private http: HttpClient, private val: Validator) { }\r\n\r\n  searchAll(): void {\r\n    this.reset();\r\n\r\n    this.http.get(`/api/courses`).subscribe((data:any) => {\r\n      this.cdata1 = data;\r\n      alert(`Searched all courses`);\r\n    })\r\n  }\r\n\r\n  searchName(): void {\r\n    this.reset();\r\n\r\n    if (this.subject && this.catalog && this.extension && this.val.validate(this.subject, 4) && this.val.validate(this.catalog, 4) && this.val.validate(this.extension, 1))\r\n    {\r\n      let name = this.subject + this.catalog + this.extension;\r\n\r\n      this.http.get(`/api/courses/${name.toUpperCase()}`).subscribe((data:any) => {\r\n        this.cdata2 = data;\r\n        alert(`Searched for course with name: ${name.toUpperCase()}`);\r\n      })\r\n    }\r\n    else\r\n    {\r\n      alert(`Invalid input!`);\r\n    }\r\n  }\r\n\r\n  searchDesc(): void {\r\n    this.reset();\r\n\r\n    if (this.key && this.val.validate(this.key, 100))\r\n    {\r\n      this.http.get(`/api/courses/key/${this.key.toUpperCase()}`).subscribe((data:any) => {\r\n        this.cdata3 = data;\r\n        alert(`Searched for course using keyword: ${this.key.toUpperCase()}`);\r\n      })\r\n    }\r\n    else\r\n    {\r\n      alert(`Invalid input!`);\r\n    }\r\n  }\r\n\r\n  reset(): void { // reset output variables\r\n    this.cdata1 = undefined;\r\n    this.cdata2 = undefined;\r\n    this.cdata3 = undefined;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Validator } from './validator.service';\r\nimport { ShareDataService } from './share-data.service';\r\nimport { Subscription, interval, Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'ta-matcher';\r\n\r\n  sub: Subscription;\r\n  activeUser = '';\r\n\r\n  inst = false;\r\n  admn = false;\r\n\r\n  constructor(private http: HttpClient, private val: Validator, public data: ShareDataService, private router: Router)\r\n  {\r\n    // every second, update the active user variable\r\n    this.sub = interval(1000).subscribe(() => {\r\n      this.activeUser = this.val.getActiveUser();\r\n\r\n      if (this.activeUser)\r\n      {\r\n        // check to see if this user is an instructor\r\n        this.http.get(`/api/users/${this.activeUser}`).subscribe((data:any) => {\r\n\r\n          if (data.type == \"instructor\")\r\n          {\r\n            this.inst = true;\r\n            this.admn = false;\r\n          }\r\n          else if (data.type == \"admin\")\r\n          {\r\n            this.admn = true;\r\n            this.inst = false;\r\n          }\r\n        });\r\n      }\r\n      else\r\n      {\r\n        this.inst = false;\r\n        this.admn = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.router.navigate(['']);\r\n  }\r\n}\r\n","<head>\r\n</head>\r\n\r\n<body>\r\n    <nav>\r\n        <div>\r\n            <a routerLink=\"/home\">Home</a><br>\r\n            <a routerLink=\"/\">Login</a><br>\r\n            <a routerLink=\"/matching\">TA Matching</a><br>\r\n            <a routerLink=\"/question\" *ngIf=\"inst\">Add Questions</a><br>\r\n            <a routerLink=\"/course\">Search for Courses</a><br>\r\n        </div>\r\n    </nav>\r\n\r\n    <div>\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n    <app-application></app-application>\r\n</body>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { appRoutingModule } from './app.routing';\r\nimport { Validator } from './validator.service';\r\nimport { InstructorViewComponent } from './instructor-view/instructor-view.component'\r\nimport { ApplicationComponent } from './application/application.component';\r\nimport { CreateQuestionComponent } from './create-question/create-question.component'\r\nimport { CourseSearchComponent } from './course-search/course-search.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatchingComponent } from './matching/matching.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    InstructorViewComponent,\r\n    ApplicationComponent,\r\n    CreateQuestionComponent,\r\n    CourseSearchComponent,\r\n    CreateQuestionComponent,\r\n    CourseSearchComponent,\r\n    MatchingComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    appRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatCheckboxModule\r\n  ],\r\n  providers: [Validator],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { InstructorViewComponent } from './instructor-view/instructor-view.component';\r\nimport { CreateQuestionComponent } from './create-question/create-question.component';\r\nimport { CourseSearchComponent } from './course-search/course-search.component';\r\nimport { MatchingComponent } from './matching/matching.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: LoginComponent },\r\n    { path: 'home', component: InstructorViewComponent },\r\n    { path: 'question', component: CreateQuestionComponent },\r\n    { path: 'course', component: CourseSearchComponent },\r\n    { path: 'matching', component: MatchingComponent },\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '', pathMatch: 'full' }\r\n];\r\n\r\nexport const appRoutingModule = RouterModule.forRoot(routes);","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Validator } from '../validator.service';\r\nimport { ShareDataService } from '../share-data.service';\r\nimport { Subscription, interval, Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-instructor-view',\r\n  templateUrl: './instructor-view.component.html',\r\n  styleUrls: ['./instructor-view.component.css']\r\n})\r\nexport class InstructorViewComponent implements OnInit {\r\n\r\n  header = { 'Content-Type': 'application/json' };\r\n  options = ({ headers: this.header });\r\n\r\n  sub: Subscription;\r\n  activeUser = '';\r\n  catalog = ''; // make upper case\r\n  subject = ''; // make upper case\r\n  extension = ''; // make upper case\r\n  catalogSearch = '';\r\n  subjectSearch = '';\r\n  extensionSearch = '';\r\n  hours=0;\r\n  numOldStudent=0;\r\n  numStudent=0;\r\n  newHours=0;\r\n  desc=''; // make descriptions upper case before sending to back end\r\n  inName='';\r\n  inEmail='';\r\n  email = '';\r\n  courseCode = '';\r\n  rank = '';\r\n  rdata: any;\r\n  requireTA: boolean = true;\r\n  requireTA2: boolean = true;\r\n  labelPosition: 'before' | 'after' = 'before';\r\n\r\n  courseCatalog = '';\r\n  courseCodeAuto = '';\r\n  courseExt = '';\r\n  inst = false;\r\n  admn = false;\r\n\r\n  cataloga = ''; // make upper case\r\n  subjecta = ''; // make upper case\r\n  extensiona = ''; // make upper case\r\n  catalogq = ''; // make upper case\r\n  subjectq = ''; // make upper case\r\n  extensionq = ''; // make upper case\r\n\r\n  constructor(private http: HttpClient, private val: Validator, public data: ShareDataService)\r\n  {\r\n    // every second, update the active user variable\r\n    this.sub = interval(1000).subscribe(() => {\r\n      this.activeUser = this.val.getActiveUser();\r\n\r\n      if (this.activeUser)\r\n      {\r\n        // check to see if this user is an instructor\r\n        this.http.get(`/api/users/${this.activeUser}`).subscribe((data:any) => {\r\n\r\n          if (data.type == \"instructor\")\r\n          {\r\n            this.inst = true;\r\n            this.admn = false;\r\n          }\r\n          else if (data.type == \"admin\")\r\n          {\r\n            this.admn = true;\r\n            this.inst = false;\r\n          }\r\n        });\r\n      }\r\n      else\r\n      {\r\n        this.inst = false;\r\n        this.admn = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  // function to view applicants for their course\r\n  viewApplicants(): void {\r\n    this.rdata = undefined;\r\n    if (this.activeUser && (this.inst || this.admn) && this.subjecta && this.cataloga)\r\n    {\r\n      const courseName = this.subjecta + this.cataloga + this.extensiona; // create course inName\r\n      this.http.get(`/api/rank/${courseName.toUpperCase()}/${this.activeUser}`).subscribe((data:any) => {\r\n        this.rdata = data;\r\n        alert(`Retrieved TA applications for course: ${courseName.toUpperCase()}`);\r\n      }, (err => {\r\n        alert(err.error);\r\n      }));\r\n    }\r\n  }\r\n\r\n  // function to rank applicants for their course\r\n  rankApplicant(): void {\r\n\r\n    if (this.activeUser && this.inst && this.rank && this.email) // instructors can manually rank applicants\r\n    {\r\n      const body = {\r\n        rank: this.rank,\r\n        email: this.email,\r\n        courseCode: this.courseCode\r\n      }\r\n\r\n      this.http.post(`/api/rank/${this.activeUser}`, body, this.options).subscribe(() => {\r\n        alert(`Applicant ${this.email} for ${this.courseCode} ranked ${this.rank}`);\r\n      }, (err => {\r\n        alert(err.error);\r\n      })\r\n      )\r\n    }\r\n    else\r\n    {\r\n      alert(\"Invalid input!\");\r\n    }\r\n  }\r\n\r\n  // function to add a course\r\n  addCourse(): void {\r\n    if (this.activeUser && this.admn && this.subject && this.catalog && this.extension && this.hours && this.numOldStudent && this.numStudent && this.desc && this.inName && this.inEmail)\r\n    {\r\n\r\n      const courseName = this.subject + this.catalog + this.extension; // create course name\r\n      const body = {\r\n        instructor: this.inName,\r\n        instructorEmail: this.inEmail,\r\n        hours: this.hours,\r\n        enrolledLast: this.numOldStudent,\r\n        enrolled: this.numStudent,\r\n        desc: this.desc.toUpperCase(),\r\n        reqTA: this.requireTA\r\n      }\r\n\r\n      this.http.post(`/api/courses/${courseName.toUpperCase()}`, body, this.options).subscribe(() => {\r\n        alert(`Created course with name: ${courseName.toUpperCase()}`);\r\n      }, (err => {\r\n        alert(err.error);\r\n      })\r\n      )\r\n    }\r\n    else\r\n    {\r\n      alert(\"Invalid input!\");\r\n    }\r\n  }\r\n\r\n  // fuction to add questions to a course\r\n  addQuestions()\r\n  {\r\n    if (this.activeUser && this.inst && this.subjectq && this.catalogq)\r\n    {\r\n      const courseName = this.subjectq + this.catalogq + this.extensionq; // create course name\r\n      const questions = this.data.questions;\r\n      this.http.post(`/api/questions/${courseName.toUpperCase()}`, questions, this.options).subscribe(() => {\r\n        alert(`Created questions for course: ${courseName.toUpperCase()}`)\r\n      }, (err => {\r\n        alert(err.error);\r\n      }))\r\n    }\r\n    else\r\n    {\r\n      alert(\"Invalid input!\");\r\n    }\r\n  }\r\n\r\n  changeTAReq()\r\n  {\r\n    if(this.catalogSearch && this.subjectSearch && this.extensionSearch)\r\n    {\r\n      const courseName = this.subjectSearch + this.catalogSearch + this.extensionSearch;\r\n      this.http.put(`/api/courses/${courseName}/${this.requireTA2}`, null, this.options).subscribe( () => {\r\n        alert(`Changed TA requirement for ${courseName} to ${this.requireTA2}`);\r\n      })\r\n    }\r\n  }\r\n\r\n  exportQuestions()\r\n  {\r\n    window.open('/api/download');\r\n    // this.http.get(`/api/download`).subscribe((data:any) => {\r\n    //   console.log(data);\r\n    // })\r\n  }\r\n\r\n  // function to override current allocated hours for a course\r\n  Override()\r\n  {\r\n    if (this.activeUser && this.admn && this.subject && this.catalog && this.newHours && this.extension)\r\n    {\r\n      const courseName = this.subject + this.catalog + this.extension; // create course name\r\n      const body = {\r\n        instructor: this.inName,\r\n        instructorEmail: this.inEmail,\r\n        hours: this.newHours,\r\n        enrolledLast: this.numOldStudent,\r\n        enrolled: this.numStudent,\r\n        desc: this.desc.toUpperCase()\r\n      }\r\n\r\n      this.http.put(`/api/courses/${courseName.toUpperCase()}`,body, this.options).subscribe(()=>{\r\n        alert(`Current allocated TA hours for : ${courseName.toUpperCase()}`+' have been overridden!')\r\n      }, (err=> {\r\n        alert(err.error);\r\n      }))\r\n    }\r\n    else{\r\n      alert(\"Invalid input!\");\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"admn\">\r\n  <h2>Import a course</h2>\r\n  <br /><br />\r\n\r\n  Subject: <input placeholder=\"ex. SE\" [(ngModel)]=\"subject\" /><br /><br />\r\n  Catalog: <input placeholder=\"ex. 3350\" [(ngModel)]=\"catalog\" /><br /><br />\r\n  Extension: <input placeholder=\"ex. A,B\" [(ngModel)]=\"extension\" /><br /><br />\r\n  Instructor Name:\r\n  <input placeholder=\"ex. John Smith\" [(ngModel)]=\"inName\" /><br /><br />\r\n  Instructor Email:\r\n  <input placeholder=\"ex. jsmith39@uwo.ca\" [(ngModel)]=\"inEmail\" /><br /><br />\r\n  Hours Last Year:\r\n  <input placeholder=\"ex. 30\" type=\"number\" [(ngModel)]=\"hours\" /><br /><br />\r\n  Previous Enrollment:\r\n  <input\r\n    placeholder=\"ex. 100\"\r\n    type=\"number\"\r\n    [(ngModel)]=\"numOldStudent\"\r\n  /><br /><br />\r\n  Current Enrollment:\r\n  <input\r\n    placeholder=\"ex. 100\"\r\n    type=\"number\"\r\n    [(ngModel)]=\"numStudent\"\r\n  /><br /><br />\r\n  <mat-checkbox [labelPosition]=\"labelPosition\" [(ngModel)]=\"requireTA\"\r\n    >Require TA: </mat-checkbox\r\n  ><br /><br />\r\n  Description: <input placeholder=\"\" [(ngModel)]=\"desc\" /><br /><br />\r\n  <button (click)=\"addCourse()\">Create Course</button>\r\n</div>\r\n\r\n<div *ngIf=\"admn\">\r\n  <h2>Adjust TA requirement for Course</h2>\r\n  <br /><br />\r\n\r\n  Subject:\r\n  <input placeholder=\"ex. SE\" [(ngModel)]=\"subjectSearch\" /><br /><br />\r\n  Catalog:\r\n  <input placeholder=\"ex. 3350\" [(ngModel)]=\"catalogSearch\" /><br /><br />\r\n  Extension:\r\n  <input placeholder=\"ex. A,B\" [(ngModel)]=\"extensionSearch\" /><br /><br />\r\n  <mat-checkbox [labelPosition]=\"labelPosition\" [(ngModel)]=\"requireTA2\"\r\n    >Require TA: </mat-checkbox\r\n  ><br /><br />\r\n  <button (click)=\"changeTAReq()\">Adjust TA requirement</button>\r\n</div>\r\n\r\n\r\n<div *ngIf=\"admn\">\r\n  <h2>Import Applicant Data</h2>\r\n  <br /><br />\r\n  <label for=\"file\">Choose File</label>\r\n  <input type=\"file\" id=\"file\" /> <br/><br/>\r\n  <button>Upload</button>\r\n</div>\r\n\r\n<div *ngIf=\"admn\">\r\n  <h2>Override allocated hours for a course</h2>\r\n  <br /><br />\r\n\r\n  Subject: <input placeholder=\"ex. SE\" [(ngModel)]=\"subject\" /><br /><br />\r\n  Catalog: <input placeholder=\"ex. 3350\" [(ngModel)]=\"catalog\" /><br /><br />\r\n  Extension: <input placeholder=\"ex. A,B\" [(ngModel)]=\"extension\" /><br /><br />\r\n  Hours: <input placeholder=\"ex. 20\" [(ngModel)]=\"newHours\" /><br /><br />\r\n\r\n  <button (click)=\"Override()\">Override allocated hours</button>\r\n</div>\r\n\r\n<div *ngIf=\"inst\">\r\n  <h2>Rank applicants</h2>\r\n  <br /><br />\r\n\r\n  Applicant Email:\r\n  <input placeholder=\"ex. bob@uwo.ca\" [(ngModel)]=\"email\" /><br /><br />\r\n  Course Code:\r\n  <input placeholder=\"ex. SE3350\" [(ngModel)]=\"courseCode\" /><br /><br />\r\n  Applicant Rank: <input placeholder=\"ex. 2\" [(ngModel)]=\"rank\" /><br /><br />\r\n\r\n  <button (click)=\"rankApplicant()\">Rank Applicant</button>\r\n</div>\r\n\r\n<div *ngIf=\"inst\">\r\n  <h2>Add questions</h2>\r\n  <br /><br />\r\n\r\n  Subject: <input placeholder=\"ex. SE\" [(ngModel)]=\"subjectq\" /><br /><br />\r\n  Catalog: <input placeholder=\"ex. 3350\" [(ngModel)]=\"catalogq\" /><br /><br />\r\n  Extension:\r\n  <input placeholder=\"ex. A,B\" [(ngModel)]=\"extensionq\" /><br /><br />\r\n\r\n  <div *ngFor=\"let question of data.numQuestions\">\r\n    <app-create-question [id]=\"question\"></app-create-question>\r\n  </div>\r\n  <div>\r\n    <button (click)=\"data.addQuestion()\">Add Question</button>\r\n    <button (click)=\"data.removeQuestion()\">Remove Question</button>\r\n  </div>\r\n\r\n  <button (click)=\"addQuestions()\">Add Questions</button>\r\n</div>\r\n\r\n<div *ngIf=\"inst || admn\">\r\n  <h2>View applicants</h2>\r\n  <br /><br />\r\n\r\n  Course Catalog:\r\n  <input placeholder=\"ex. SE\" [(ngModel)]=\"subjecta\" /><br /><br />\r\n  Course Code:\r\n  <input placeholder=\"ex. 3350\" [(ngModel)]=\"cataloga\" /><br /><br />\r\n  Course Extension:\r\n  <input placeholder=\"ex. B\" [(ngModel)]=\"extensiona\" /><br /><br />\r\n\r\n  <button (click)=\"viewApplicants()\">View Applicants</button><br /><br />\r\n  <div *ngIf=\"rdata\">\r\n    <p>Displaying search results for {{ rdata[0].courseCode }}</p>\r\n    <ul class=\"list\">\r\n      <li *ngFor=\"let r of rdata\" class=\"list-li\">\r\n        <span>Applicant: {{ r.name }} ({{ r.email }})</span><br />\r\n        <span>Instructor Ranking: {{ r.instructorRank }}</span\r\n        ><br />\r\n        <span>Self Ranking: {{ r.courseRank }}</span\r\n        ><br />\r\n        <span>Status: {{ r.status }}</span\r\n        ><br />\r\n        <span>Hours: {{ r.hours }}</span\r\n        ><br /><br />\r\n        <span>\r\n          <li *ngFor=\"let s of r.questions; let i = index\" class=\"list-li\">\r\n            <span>Question {{ i + 1 }}: {{ s.question }}</span\r\n            ><br />\r\n            <span>Answer: {{ s.answer }}</span>\r\n          </li>\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { Subscription, interval} from 'rxjs';\r\nimport { Validator } from '../validator.service';\r\n\r\n@Component({\r\n  selector: 'app-application',\r\n  templateUrl: './application.component.html',\r\n  styleUrls: ['./application.component.css']\r\n})\r\nexport class ApplicationComponent implements OnInit {\r\n\r\n  options = [{display: \"Yes\", value: true}, {display:\"No\", value: false}];\r\n  @Input() course: string | undefined;\r\n  @Input() courseTaken: Boolean | undefined;\r\n  @Input() courseLoc: string | undefined;\r\n  @Input() courseTAd: Boolean | undefined;\r\n  @Input() prevExp: string | undefined;\r\n\r\n\r\n  sub: Subscription;\r\n  activeUser = \"\";\r\n  isStudent: Boolean = false;\r\n  studentEmail: string | undefined;\r\n  taEmail: string | undefined;\r\n\r\n  constructor(private http: HttpClient, public validator: Validator) {\r\n    this.sub = interval(100).subscribe(() => {\r\n      this.activeUser = this.validator.getActiveUser();\r\n\r\n      if (this.activeUser)\r\n      {\r\n        // check to see if this user is a student\r\n        this.http.get(`/api/users/${this.activeUser}`).subscribe((data:any) => {\r\n          if (data.type === \"student\") // if user is a student\r\n          {\r\n            this.isStudent = true;\r\n            this.studentEmail = data.email;\r\n          }\r\n          else // if user is not a student\r\n          {\r\n            this.isStudent = false;\r\n          }\r\n        })\r\n      }\r\n      else\r\n      {\r\n        this.isStudent = false;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  submitApplication(){\r\n    if(confirm(\"Are you sure you want to submit this application?\")){\r\n      this.http.post<any>(`/api/application/${this.studentEmail}`, {base: [this.course, this.courseTaken, this.courseLoc,this.courseTAd, this.prevExp]}).subscribe((data:any) => {\r\n        alert(\"Application submitted\");\r\n      })\r\n    }\r\n  }\r\n\r\n  deleteApplication(){\r\n    this.http.delete<any>(`/api/application/delete/${this.taEmail}`).subscribe((data:any) => {\r\n      //alert(\"Applications deleted\");\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"form\" *ngIf=\"this.isStudent\">\r\n  <h2>Apply</h2>\r\n  <div>\r\n    Course:\r\n    <input [(ngModel)]=\"course\" placeholder=\"Course e.g. SE2202A\">\r\n  </div>\r\n  <div>\r\n    Have you taken this course before?\r\n    <select [(ngModel)]=\"courseTaken\">\r\n      <option *ngFor=\"let x of options\" [ngValue]=\"x.value\">{{x.display}}</option>\r\n    </select>\r\n  </div>\r\n  <div *ngIf=\"courseTaken == true\">\r\n    Where did you take this course?\r\n    <input [(ngModel)]=\"courseLoc\" placeholder=\"University e.g. Western University\">\r\n  </div>\r\n  <div>\r\n    Have you TA'd this course before?\r\n    <select [(ngModel)]=\"courseTAd\">\r\n      <option *ngFor=\"let x of options\" [ngValue]=\"x.value\">{{x.display}}</option>\r\n    </select>\r\n  </div>\r\n  <div>\r\n    List any previous TA experience\r\n    <textarea [(ngModel)]=\"prevExp\"></textarea>\r\n  </div>\r\n  <button (click)=\"submitApplication()\">Submit</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Validator } from '../validator.service';\r\nimport { ShareDataService } from '../share-data.service';\r\nimport { Subscription, interval, Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-matching',\r\n  templateUrl: './matching.component.html',\r\n  styleUrls: ['./matching.component.css']\r\n})\r\nexport class MatchingComponent implements OnInit {\r\n\r\n  header = { 'Content-Type': 'application/json' };\r\n  options = ({ headers: this.header });\r\n  mdata = undefined;\r\n\r\n  sub: Subscription;\r\n  activeUser = '';\r\n  inst = false;\r\n  admn = false;\r\n\r\n  subject = ''; // make upper case\r\n  catalog = ''; // make upper case\r\n  extension = ''; // make upper case\r\n  prior = ''; // make lower case\r\n  courseName = '';\r\n\r\n  constructor(private http: HttpClient, private val: Validator, public data: ShareDataService)\r\n  {\r\n    // every second, update the active user variable\r\n    this.sub = interval(1000).subscribe(() => {\r\n      this.activeUser = this.val.getActiveUser();\r\n\r\n      if (this.activeUser)\r\n      {\r\n        // check to see if this user is an instructor\r\n        this.http.get(`/api/users/${this.activeUser}`).subscribe((data:any) => {\r\n\r\n          if (data.type == \"instructor\")\r\n          {\r\n            this.inst = true;\r\n            this.admn = false;\r\n          }\r\n          else if (data.type == \"admin\")\r\n          {\r\n            this.admn = true;\r\n            this.inst = false;\r\n          }\r\n        });\r\n      }\r\n      else\r\n      {\r\n        this.inst = false;\r\n        this.admn = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  // function to generate matches\r\n  generateMatches(): void\r\n  {\r\n    if (this.activeUser && (this.inst || this.admn) && this.catalog && this.subject && this.prior)\r\n    {\r\n      this.courseName = this.subject.toUpperCase() + this.catalog + this.extension.toUpperCase(); // create course name\r\n\r\n      this.http.get(`/api/algorithm/${this.courseName}/${this.activeUser}/${this.prior.toLowerCase()}`).subscribe(() => {\r\n        alert(`Generated TA matches for course: ${this.courseName}`);\r\n      }, (err => {\r\n        alert(err.error);\r\n      })\r\n      )\r\n    }\r\n    else\r\n    {\r\n      alert(\"Invalid input!\");\r\n    }\r\n  }\r\n\r\n  // function to view matches\r\n  viewMatches(): void\r\n  {\r\n    this.mdata = undefined;\r\n    if (this.activeUser && (this.inst || this.admn) && this.catalog && this.subject && this.prior)\r\n    {\r\n      this.courseName = this.subject.toUpperCase() + this.catalog + this.extension.toUpperCase(); // create course name\r\n\r\n      this.http.get(`/api/matches/${this.courseName}/${this.activeUser}`).subscribe((data:any) => {\r\n        this.mdata = data;\r\n        alert(`Retrieved TA matches for course: ${this.courseName}`);\r\n      }, (err => {\r\n        alert(err.error);\r\n      })\r\n      )\r\n    }\r\n    else\r\n    {\r\n      alert(\"Invalid input!\");\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div *ngIf = \"inst || admn\">\r\n  <h2>TA Matching</h2><br><br>\r\n\r\n  Course Catalog: <input placeholder=\"ex. SE\" [(ngModel)]=\"subject\"><br><br>\r\n  Course Code: <input placeholder=\"ex. 3350\" [(ngModel)]=\"catalog\"><br><br>\r\n  Course Extension: <input placeholder=\"ex. B\" [(ngModel)]=\"extension\"><br><br>\r\n  Priority: <input placeholder=\"'instructor' or 'applicant'\" [(ngModel)]=\"prior\"><br><br>\r\n\r\n  <span>\r\n    <button (click)=\"generateMatches()\">Generate</button>\r\n    <button (click)=\"viewMatches()\">View Matches</button>\r\n  </span><br><br>\r\n\r\n  <div *ngIf=\"mdata\">\r\n    <p>Displaying TA matches for {{courseName}}</p>\r\n    <ul class=\"list\">\r\n      <li *ngFor=\"let m of mdata\" class=\"list-li\">\r\n        <span>TA: {{m.name}} ({{m.email}})</span><br>\r\n        <span>Hours: {{m.hours}}</span><br><br>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Account } from '../account'\r\nimport { Validator } from '../validator.service'\r\nimport { Subscription, interval, Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  account: Account | undefined;\r\n\r\n  header = { 'Content-Type': 'application/json' };\r\n  options = ({ headers: this.header });\r\n\r\n  email = '';\r\n  password = '';\r\n  emailNew = '';\r\n  passwordNew = '';\r\n  passwordCheck = '';\r\n  oldPassword = '';\r\n  oldPasswordCheck = '';\r\n  passwordChange = '';\r\n  fName = '';\r\n  lName = '';\r\n  type = '';\r\n  id = 0;\r\n  hours: any;\r\n  ass: any;\r\n\r\n  sub: Subscription;\r\n  activeUser = '';\r\n  loggedIn = false;\r\n\r\n  constructor(private http: HttpClient, private val: Validator) {\r\n    this.sub = interval(100).subscribe(() => {\r\n      this.activeUser = this.val.getActiveUser();\r\n      if (this.activeUser != \"\")\r\n      {\r\n        this.loggedIn = true;\r\n      }\r\n    })\r\n   }\r\n\r\n  loginUser(): void {\r\n    if (this.email && this.password) {\r\n      const body = {\r\n        email: this.email,\r\n        password: this.password\r\n      };\r\n\r\n      this.http.post<Account>(`/api/users/login/${this.email}`, body, this.options).subscribe(() => {\r\n        alert('User logged in successfully');\r\n        this.loggedIn = true;\r\n        this.activeUser = this.email;\r\n        this.val.setActiveUser(this.email);\r\n      }, (err => {\r\n        alert(err.error);\r\n      }));\r\n    }\r\n    else {\r\n      alert('Missing or invalid inputs!');\r\n    }\r\n  }\r\n\r\n  logoutUser(): void {\r\n    this.loggedIn = false;\r\n    this.activeUser = '';\r\n    this.val.setActiveUser('');\r\n  }\r\n\r\n  newUser(): void {\r\n\r\n    if (this.emailNew && this.passwordNew && this.passwordCheck && this.fName && this.lName && this.id && this.type && this.val.validateNum(this.id, 0, 999999999) && this.password == this.passwordCheck && (this.type == \"student\" || this.type == \"instructor\") && String(this.id).length == 9)\r\n    {\r\n\r\n      if (this.type == \"student\")\r\n      {\r\n        this.hours = 0;\r\n        this.ass = false;\r\n      }\r\n      else if (this.type == \"instructor\")\r\n      {\r\n        this.hours = null;\r\n        this.ass = null;\r\n      }\r\n\r\n      const body = {\r\n        password: this.passwordNew,\r\n        fName: this.fName,\r\n        lName: this.lName,\r\n        idNo: this.id,\r\n        type: this.type,\r\n        hours: this.hours,\r\n        isAssigned: this.ass\r\n      }\r\n\r\n      this.http.post(`/api/users/${this.emailNew}`, body, this.options).subscribe(() => {\r\n        alert('User account created successfully, please log in')\r\n      }, (err => {\r\n        alert(err.error);\r\n      }))\r\n    }\r\n    else {\r\n      alert('Missing or invalid inputs!');\r\n    }\r\n  }\r\n\r\n  changePassword(): void {\r\n\r\n    if (this.passwordChange && this.passwordCheck && this.oldPassword && this.oldPasswordCheck && this.passwordChange == this.passwordCheck && this.oldPassword == this.oldPasswordCheck && this.passwordChange != this.oldPassword)\r\n    {\r\n      const body = {\r\n        old_password: this.oldPassword,\r\n        password: this.passwordChange\r\n      }\r\n\r\n      this.http.put(`/api/users/${this.val.getActiveUser()}`, body, this.options).subscribe(() => {\r\n        alert('Changed password successfully');\r\n      }, (err => {\r\n        alert(err.error);\r\n      }))\r\n    }\r\n    else {\r\n      alert('Missing or invalid inputs!');\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"!loggedIn\">\r\n\r\n  <h2>Log in to an account</h2>\r\n\r\n  Email: <input placeholder=\"enter email...\" [(ngModel)]=\"email\"><br><br>\r\n  Password: <input placeholder=\"enter password...\" type=\"password\" [(ngModel)]=\"password\"><br><br>\r\n\r\n  <button (click)=\"loginUser()\">Log in</button>\r\n\r\n  <h2>Create an account</h2>\r\n\r\n  Email: <input placeholder=\"enter email...\" [(ngModel)]=\"emailNew\"><br><br>\r\n  Password: <input placeholder=\"enter password...\" type=\"password\" [(ngModel)]=\"passwordNew\"><br><br>\r\n  Confirm Password: <input placeholder=\"enter password again...\" type=\"password\" [(ngModel)]=\"passwordCheck\"><br><br>\r\n  First Name: <input placeholder=\"enter first name...\" [(ngModel)]=\"fName\"><br><br>\r\n  Last Name: <input placeholder=\"enter last name...\" [(ngModel)]=\"lName\"><br><br>\r\n  Account Type: <input placeholder=\"enter 'student' or 'instructor'...\" [(ngModel)]=\"type\"><br><br>\r\n  Western ID: <input placeholder=\"enter 9-digit id...\" type=\"number\" [(ngModel)]=\"id\"><br><br>\r\n\r\n  <button (click)=\"newUser()\">Register</button>\r\n\r\n</div>\r\n\r\n<div *ngIf=\"loggedIn\">\r\n  <button (click)=\"logoutUser()\">Log out</button>\r\n\r\n  <h2>Change your password</h2>\r\n\r\n  Existing Password: <input placeholder=\"enter existing password...\" type=\"password\" [(ngModel)]=\"oldPassword\"><br><br>\r\n  Confirm Existing Password: <input placeholder=\"enter existing password again...\" type=\"password\" [(ngModel)]=\"oldPasswordCheck\"><br><br>\r\n  New Password: <input placeholder=\"enter new password...\" type=\"password\" [(ngModel)]=\"passwordChange\"><br><br>\r\n  Confirm New Password: <input placeholder=\"enter new password again...\" type=\"password\" [(ngModel)]=\"passwordCheck\"><br><br>\r\n\r\n  <button (click)=\"changePassword()\">Update Password</button>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShareDataService {\r\n  numQuestions = new Array();\r\n  questions = new Array();\r\n  constructor() { }\r\n\r\n  addQuestion(){\r\n    this.numQuestions.push({num:this.numQuestions.length, display:`Question ${this.numQuestions.length+1}`});\r\n    this.questions.push(\"\");\r\n  }\r\n\r\n  removeQuestion(){\r\n    this.numQuestions.pop();\r\n    this.questions.pop();\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class Validator {\r\n\r\n  private activerUser: string; // string to keep track of the user who is logged in\r\n\r\n  constructor()\r\n  {\r\n    this.activerUser = \"\";\r\n  }\r\n\r\n  getActiveUser() // get the value of the active user\r\n  {\r\n    return this.activerUser;\r\n  }\r\n\r\n  setActiveUser(val: string) // set the value of the active user\r\n  {\r\n    this.activerUser = val;\r\n  }\r\n\r\n  // method to validate a string of a given maximum length\r\n  public validate(inp: string, len: number)\r\n  {\r\n    if ((typeof inp !== \"string\") || (inp.length == 0) || (inp.length > len) || (inp.includes(\"<\")) || (inp.includes(\">\")) || (inp.includes(\"^\")) || (inp.includes(\".\")) || (inp.includes(\"/\")) || (inp.includes(\"(\")) || (inp.includes(\")\")) || (inp.includes(\"*\")) || (inp.includes(\"'\"))  || (inp.includes(\"_\")) || (inp.includes(\"=\")) || (inp.includes(\"$\")) || (inp.includes(\"?\")) || (inp.includes(\"!\")) || (inp.includes(\"%\")) || (inp.includes(\"\\\"\")) || (inp.includes(\"`\")) || (inp.includes(\"+\")) || (inp.includes(\"&\")))\r\n    {\r\n      return false;\r\n    }\r\n    else\r\n    {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // method to validate numerical input\r\n  public validateNum(inp: number, min: number, max: number)\r\n  {\r\n    if ((typeof inp === \"number\") && (inp >= min) && (inp <= max))\r\n    {\r\n      return true;\r\n    }\r\n    else\r\n    {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // method to validate an email address\r\n  public validateEmail(inp: string)\r\n  {\r\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(inp)) // email must match this pattern\r\n    {\r\n        return true;\r\n    }\r\n    else\r\n    {\r\n        return false;\r\n    }\r\n  }\r\n\r\n  // method to validate a string of a given maximum length\r\n  public validatePass(inp: string, len: number)\r\n  {\r\n    if ((typeof inp !== \"string\") || (inp.length == 0) || (inp.length > len) || (inp.includes(\"<\")) || (inp.includes(\">\")) || (inp.includes(\"^\")) || (inp.includes(\".\")) || (inp.includes(\"/\")) || (inp.includes(\"(\")) || (inp.includes(\")\")) || (inp.includes(\"*\")) || (inp.includes(\"'\"))  || (inp.includes(\"_\")) || (inp.includes(\"=\")) || (inp.includes(\"\\\"\")) || (inp.includes(\"`\")) || (inp.includes(\"+\")))\r\n    {\r\n      return false;\r\n    }\r\n    else\r\n    {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}