{"version":3,"sources":["./src/app/create-question/create-question.component.ts","./src/app/create-question/create-question.component.html","./src/environments/environment.ts","./src/app/course-search/course-search.component.html","./src/app/course-search/course-search.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/instructor-view/instructor-view.component.ts","./src/app/instructor-view/instructor-view.component.html","./src/app/application/application.component.ts","./src/app/application/application.component.html","./src/app/matching/matching.component.ts","./src/app/matching/matching.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/share-data.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/validator.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ShareDataService } from '../share-data.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Validator } from '../validator.service';\nimport { Subscription, interval, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-create-question',\n  templateUrl: './create-question.component.html',\n  styleUrls: ['./create-question.component.css']\n})\nexport class CreateQuestionComponent implements OnInit {\n  @Input()\n  id: any;\n  boolean = [{display: \"Yes\", value: true}, {display: \"No\", value: false}]\n\n  header = { 'Content-Type': 'application/json' };\n  options = ({ headers: this.header });\n\n  sub: Subscription;\n  activeUser = '';\n  rdata: any;\n\n  inst = false;\n  admn = false;\n\n  catalogq = ''; // make upper case\n  subjectq = ''; // make upper case\n  extensionq = ''; // make upper case\n\n  constructor(private http: HttpClient, private val: Validator, public data: ShareDataService)\n  {\n    // every second, update the active user variable\n    this.sub = interval(1000).subscribe(() => {\n      this.activeUser = this.val.getActiveUser();\n\n      if (this.activeUser)\n      {\n        // check to see if this user is an instructor\n        this.http.get(`/api/users/${this.activeUser}`).subscribe((data:any) => {\n\n          if (data.type == \"instructor\")\n          {\n            this.inst = true;\n            this.admn = false;\n          }\n          else if (data.type == \"admin\")\n          {\n            this.admn = true;\n            this.inst = false;\n          }\n        });\n      }\n      else\n      {\n        this.inst = false;\n        this.admn = false;\n      }\n    });\n  }\n\n  exportQuestions()\n  {\n    window.open('/api/download');\n    // this.http.get(`/api/download`).subscribe((data:any) => {\n    //   console.log(data);\n    // })\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"inst\">\n  <h2>Export Questions</h2>\n  <button (click)=\"exportQuestions()\">Export</button>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<h2>View all courses</h2><br><br>\n<button (click)=\"searchAll()\">View All</button>\n<div *ngIf=\"cdata1\">\n  <p>Displaying search results</p>\n  <ul class=\"list\">\n    <li *ngFor=\"let c of cdata1\" class=\"list-li\">\n      <span>{{c.courseName}} - {{c.desc}}</span>\n      <span>Taught by: {{c.instructor}} ({{c.instructorEmail}})</span>\n      <span>Enrollment: {{c.enrolled}} student</span>\n      <span>TA hours available: {{c.hours}} hours</span>\n    </li>\n  </ul>\n</div>\n\n<h2>Search by course name</h2><br><br>\nSubject: <input placeholder=\"ex. SE\" [(ngModel)]=\"subject\"><br><br>\nCatalog: <input placeholder=\"ex. 3350\" [(ngModel)]=\"catalog\"><br><br>\nExtension: <input placeholder=\"ex. B\" [(ngModel)]=\"extension\"><br><br>\n<button (click)=\"searchName()\">Search</button>\n<div *ngIf=\"cdata2\">\n  <p>Displaying search results</p>\n  <ul class=\"list\">\n    <li class=\"list-li\">\n      <span>{{cdata2.courseName}} - {{cdata2.desc}}</span>\n      <span>Taught by: {{cdata2.instructor}} ({{cdata2.instructorEmail}})</span>\n      <span>Enrollment: {{cdata2.enrolled}} student</span>\n      <span>TA hours available: {{cdata2.hours}} hours</span>\n    </li>\n  </ul>\n</div>\n\n<h2>Search by course description</h2><br><br>\nSearch Term: <input placeholder=\"Enter keyword(s)...\" [(ngModel)]=\"key\"><br><br>\n<button (click)=\"searchDesc()\">Search</button><br><br>\n<div *ngIf=\"cdata3\">\n  <p>Displaying search results</p>\n  <ul class=\"list\">\n    <li *ngFor=\"let c of cdata3\" class=\"list-li\">\n      <span>{{c.courseName}} - {{c.desc}}</span>\n      <span>Taught by: {{c.instructor}} ({{c.instructorEmail}})</span>\n      <span>Enrollment: {{c.enrolled}} student</span>\n      <span>TA hours available: {{c.hours}} hours</span>\n    </li>\n  </ul>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Validator } from '../validator.service';\n\n@Component({\n  selector: 'app-course-search',\n  templateUrl: './course-search.component.html',\n  styleUrls: ['./course-search.component.css']\n})\nexport class CourseSearchComponent implements OnInit {\n\n  header = { 'Content-Type': 'application/json' };\n  options = ({ headers: this.header });\n\n  std = false;\n  cdata1: any;\n  cdata2: any;\n  cdata3: any;\n  subject = '';\n  catalog = '';\n  extension = '';\n  key = '';\n\n  constructor(private http: HttpClient, private val: Validator) { }\n\n  searchAll(): void {\n    this.reset();\n\n    this.http.get(`/api/courses`).subscribe((data:any) => {\n      this.cdata1 = data;\n      alert(`Searched all courses`);\n    })\n  }\n\n  searchName(): void {\n    this.reset();\n\n    if (this.subject && this.catalog && this.extension && this.val.validate(this.subject, 4) && this.val.validate(this.catalog, 4) && this.val.validate(this.extension, 1))\n    {\n      let name = this.subject + this.catalog + this.extension;\n\n      this.http.get(`/api/courses/${name.toUpperCase()}`).subscribe((data:any) => {\n        this.cdata2 = data;\n        alert(`Searched for course with name: ${name.toUpperCase()}`);\n      })\n    }\n    else\n    {\n      alert(`Invalid input!`);\n    }\n  }\n\n  searchDesc(): void {\n    this.reset();\n\n    if (this.key && this.val.validate(this.key, 100))\n    {\n      this.http.get(`/api/courses/key/${this.key.toUpperCase()}`).subscribe((data:any) => {\n        this.cdata3 = data;\n        alert(`Searched for course using keyword: ${this.key.toUpperCase()}`);\n      })\n    }\n    else\n    {\n      alert(`Invalid input!`);\n    }\n  }\n\n  reset(): void { // reset output variables\n    this.cdata1 = undefined;\n    this.cdata2 = undefined;\n    this.cdata3 = undefined;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Validator } from './validator.service';\nimport { ShareDataService } from './share-data.service';\nimport { Subscription, interval, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ta-matcher';\n\n  sub: Subscription;\n  activeUser = '';\n\n  inst = false;\n  admn = false;\n\n  constructor(private http: HttpClient, private val: Validator, public data: ShareDataService, private router: Router)\n  {\n    // every second, update the active user variable\n    this.sub = interval(1000).subscribe(() => {\n      this.activeUser = this.val.getActiveUser();\n\n      if (this.activeUser)\n      {\n        // check to see if this user is an instructor\n        this.http.get(`/api/users/${this.activeUser}`).subscribe((data:any) => {\n\n          if (data.type == \"instructor\")\n          {\n            this.inst = true;\n            this.admn = false;\n          }\n          else if (data.type == \"admin\")\n          {\n            this.admn = true;\n            this.inst = false;\n          }\n        });\n      }\n      else\n      {\n        this.inst = false;\n        this.admn = false;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.router.navigate(['']);\n  }\n}\n","<head>\n</head>\n\n<body>\n    <nav>\n        <div>\n            <a routerLink=\"/home\">Home</a><br>\n            <a routerLink=\"/\">Login</a><br>\n            <a routerLink=\"/matching\">TA Matching</a><br>\n            <a routerLink=\"/question\" *ngIf=\"inst\">Add Questions</a><br>\n            <a routerLink=\"/course\">Search for Courses</a><br>\n            <a routerLink=\"/application\">Submit TA Application</a><br>\n        </div>\n    </nav>\n\n    <div>\n        <router-outlet></router-outlet>\n    </div>\n</body>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { appRoutingModule } from './app.routing';\nimport { Validator } from './validator.service';\nimport { InstructorViewComponent } from './instructor-view/instructor-view.component'\nimport { ApplicationComponent } from './application/application.component';\nimport { CreateQuestionComponent } from './create-question/create-question.component'\nimport { CourseSearchComponent } from './course-search/course-search.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatchingComponent } from './matching/matching.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    InstructorViewComponent,\n    ApplicationComponent,\n    CreateQuestionComponent,\n    CourseSearchComponent,\n    CreateQuestionComponent,\n    CourseSearchComponent,\n    MatchingComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    appRoutingModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule\n  ],\n  providers: [Validator],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { InstructorViewComponent } from './instructor-view/instructor-view.component';\nimport { CreateQuestionComponent } from './create-question/create-question.component';\nimport { CourseSearchComponent } from './course-search/course-search.component';\nimport { MatchingComponent } from './matching/matching.component';\nimport { ApplicationComponent } from './application/application.component';\n\nconst routes: Routes = [\n    { path: '', component: LoginComponent },\n    { path: 'home', component: InstructorViewComponent },\n    { path: 'question', component: CreateQuestionComponent },\n    { path: 'course', component: CourseSearchComponent },\n    { path: 'matching', component: MatchingComponent },\n    {path: 'application', component: ApplicationComponent},\n    { path: '**', redirectTo: '', pathMatch: 'full' }\n  ]\n\nexport const appRoutingModule = RouterModule.forRoot(routes);\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Validator } from '../validator.service';\nimport { ShareDataService } from '../share-data.service';\nimport { Subscription, interval, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-instructor-view',\n  templateUrl: './instructor-view.component.html',\n  styleUrls: ['./instructor-view.component.css']\n})\nexport class InstructorViewComponent implements OnInit {\n\n  header = { 'Content-Type': 'application/json' };\n  options = ({ headers: this.header });\n\n  sub: Subscription;\n  activeUser = '';\n  catalog = ''; // make upper case\n  subject = ''; // make upper case\n  extension = ''; // make upper case\n  catalogSearch = '';\n  subjectSearch = '';\n  extensionSearch = '';\n  hours=0;\n  numOldStudent=0;\n  numStudent=0;\n  newHours=0;\n  desc=''; // make descriptions upper case before sending to back end\n  inName='';\n  inEmail='';\n  email = '';\n  courseCode = '';\n  rank = '';\n  rdata: any;\n  requireTA: boolean = true;\n  requireTA2: boolean = true;\n  labelPosition: 'before' | 'after' = 'before';\n\n  courseCatalog = '';\n  courseCodeAuto = '';\n  courseExt = '';\n  inst = false;\n  admn = false;\n\n  cataloga = ''; // make upper case\n  subjecta = ''; // make upper case\n  extensiona = ''; // make upper case\n  catalogq = ''; // make upper case\n  subjectq = ''; // make upper case\n  extensionq = ''; // make upper case\n\n  constructor(private http: HttpClient, private val: Validator, public data: ShareDataService)\n  {\n    // every second, update the active user variable\n    this.sub = interval(1000).subscribe(() => {\n      this.activeUser = this.val.getActiveUser();\n\n      if (this.activeUser)\n      {\n        // check to see if this user is an instructor\n        this.http.get(`/api/users/${this.activeUser}`).subscribe((data:any) => {\n\n          if (data.type == \"instructor\")\n          {\n            this.inst = true;\n            this.admn = false;\n          }\n          else if (data.type == \"admin\")\n          {\n            this.admn = true;\n            this.inst = false;\n          }\n        });\n      }\n      else\n      {\n        this.inst = false;\n        this.admn = false;\n      }\n    });\n  }\n\n  // function to view applicants for their course\n  viewApplicants(): void {\n    this.rdata = undefined;\n    if (this.activeUser && (this.inst || this.admn) && this.subjecta && this.cataloga)\n    {\n      const courseName = this.subjecta + this.cataloga + this.extensiona; // create course inName\n      this.http.get(`/api/rank/${courseName.toUpperCase()}/${this.activeUser}`).subscribe((data:any) => {\n        this.rdata = data;\n        alert(`Retrieved TA applications for course: ${courseName.toUpperCase()}`);\n      }, (err => {\n        alert(err.error);\n      }));\n    }\n  }\n\n  // function to rank applicants for their course\n  rankApplicant(): void {\n\n    if (this.activeUser && this.inst && this.rank && this.email) // instructors can manually rank applicants\n    {\n      const body = {\n        rank: this.rank,\n        email: this.email,\n        courseCode: this.courseCode\n      }\n\n      this.http.post(`/api/rank/${this.activeUser}`, body, this.options).subscribe(() => {\n        alert(`Applicant ${this.email} for ${this.courseCode} ranked ${this.rank}`);\n      }, (err => {\n        alert(err.error);\n      })\n      )\n    }\n    else\n    {\n      alert(\"Invalid input!\");\n    }\n  }\n\n  // function to add a course\n  addCourse(): void {\n    if (this.activeUser && this.admn && this.subject && this.catalog && this.extension && this.hours && this.numOldStudent && this.numStudent && this.desc && this.inName && this.inEmail)\n    {\n\n      const courseName = this.subject + this.catalog + this.extension; // create course name\n      const body = {\n        instructor: this.inName,\n        instructorEmail: this.inEmail,\n        hours: this.hours,\n        enrolledLast: this.numOldStudent,\n        enrolled: this.numStudent,\n        desc: this.desc.toUpperCase(),\n        reqTA: this.requireTA\n      }\n\n      this.http.post(`/api/courses/${courseName.toUpperCase()}`, body, this.options).subscribe(() => {\n        alert(`Created course with name: ${courseName.toUpperCase()}`);\n      }, (err => {\n        alert(err.error);\n      })\n      )\n    }\n    else\n    {\n      alert(\"Invalid input!\");\n    }\n  }\n\n  // fuction to add questions to a course\n  addQuestions()\n  {\n    if (this.activeUser && this.inst && this.subjectq && this.catalogq)\n    {\n      const courseName = this.subjectq + this.catalogq + this.extensionq; // create course name\n      const questions = this.data.questions;\n      this.http.post(`/api/questions/${courseName.toUpperCase()}`, questions, this.options).subscribe(() => {\n        alert(`Created questions for course: ${courseName.toUpperCase()}`)\n      }, (err => {\n        alert(err.error);\n      }))\n    }\n    else\n    {\n      alert(\"Invalid input!\");\n    }\n  }\n\n  changeTAReq()\n  {\n    if(this.catalogSearch && this.subjectSearch && this.extensionSearch)\n    {\n      const courseName = this.subjectSearch + this.catalogSearch + this.extensionSearch;\n      this.http.put(`/api/courses/${courseName}/${this.requireTA2}`, null, this.options).subscribe( () => {\n        alert(`Changed TA requirement for ${courseName} to ${this.requireTA2}`);\n      })\n    }\n  }\n\n  exportQuestions()\n  {\n    window.open('/api/download');\n    // this.http.get(`/api/download`).subscribe((data:any) => {\n    //   console.log(data);\n    // })\n  }\n\n  // function to override current allocated hours for a course\n  Override()\n  {\n    if (this.activeUser && this.admn && this.subject && this.catalog && this.newHours && this.extension)\n    {\n      const courseName = this.subject + this.catalog + this.extension; // create course name\n      const body = {\n        instructor: this.inName,\n        instructorEmail: this.inEmail,\n        hours: this.newHours,\n        enrolledLast: this.numOldStudent,\n        enrolled: this.numStudent,\n        desc: this.desc.toUpperCase()\n      }\n\n      this.http.put(`/api/courses/${courseName.toUpperCase()}`,body, this.options).subscribe(()=>{\n        alert(`Current allocated TA hours for : ${courseName.toUpperCase()}`+' have been overridden!')\n      }, (err=> {\n        alert(err.error);\n      }))\n    }\n    else{\n      alert(\"Invalid input!\");\n    }\n\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"admn\">\n  <h2>Import a course</h2>\n  <br /><br />\n\n  Subject: <input placeholder=\"ex. SE\" [(ngModel)]=\"subject\" /><br /><br />\n  Catalog: <input placeholder=\"ex. 3350\" [(ngModel)]=\"catalog\" /><br /><br />\n  Extension: <input placeholder=\"ex. A,B\" [(ngModel)]=\"extension\" /><br /><br />\n  Instructor Name:\n  <input placeholder=\"ex. John Smith\" [(ngModel)]=\"inName\" /><br /><br />\n  Instructor Email:\n  <input placeholder=\"ex. jsmith39@uwo.ca\" [(ngModel)]=\"inEmail\" /><br /><br />\n  Hours Last Year:\n  <input placeholder=\"ex. 30\" type=\"number\" [(ngModel)]=\"hours\" /><br /><br />\n  Previous Enrollment:\n  <input\n    placeholder=\"ex. 100\"\n    type=\"number\"\n    [(ngModel)]=\"numOldStudent\"\n  /><br /><br />\n  Current Enrollment:\n  <input\n    placeholder=\"ex. 100\"\n    type=\"number\"\n    [(ngModel)]=\"numStudent\"\n  /><br /><br />\n  <mat-checkbox [labelPosition]=\"labelPosition\" [(ngModel)]=\"requireTA\"\n    >Require TA: </mat-checkbox\n  ><br /><br />\n  Description: <input placeholder=\"\" [(ngModel)]=\"desc\" /><br /><br />\n  <button (click)=\"addCourse()\">Create Course</button>\n</div>\n\n<div *ngIf=\"admn\">\n  <h2>Adjust TA requirement for Course</h2>\n  <br /><br />\n\n  Subject:\n  <input placeholder=\"ex. SE\" [(ngModel)]=\"subjectSearch\" /><br /><br />\n  Catalog:\n  <input placeholder=\"ex. 3350\" [(ngModel)]=\"catalogSearch\" /><br /><br />\n  Extension:\n  <input placeholder=\"ex. A,B\" [(ngModel)]=\"extensionSearch\" /><br /><br />\n  <mat-checkbox [labelPosition]=\"labelPosition\" [(ngModel)]=\"requireTA2\"\n    >Require TA: </mat-checkbox\n  ><br /><br />\n  <button (click)=\"changeTAReq()\">Adjust TA requirement</button>\n</div>\n\n\n<div *ngIf=\"admn\">\n  <h2>Import Applicant Data</h2>\n  <br /><br />\n  <label for=\"file\">Choose File</label>\n  <input type=\"file\" id=\"file\" /> <br/><br/>\n  <button>Upload</button>\n</div>\n\n<div *ngIf=\"admn\">\n  <h2>Override allocated hours for a course</h2>\n  <br /><br />\n\n  Subject: <input placeholder=\"ex. SE\" [(ngModel)]=\"subject\" /><br /><br />\n  Catalog: <input placeholder=\"ex. 3350\" [(ngModel)]=\"catalog\" /><br /><br />\n  Extension: <input placeholder=\"ex. A,B\" [(ngModel)]=\"extension\" /><br /><br />\n  Hours: <input placeholder=\"ex. 20\" [(ngModel)]=\"newHours\" /><br /><br />\n\n  <button (click)=\"Override()\">Override allocated hours</button>\n</div>\n\n<div *ngIf=\"inst\">\n  <h2>Rank applicants</h2>\n  <br /><br />\n\n  Applicant Email:\n  <input placeholder=\"ex. bob@uwo.ca\" [(ngModel)]=\"email\" /><br /><br />\n  Course Code:\n  <input placeholder=\"ex. SE3350\" [(ngModel)]=\"courseCode\" /><br /><br />\n  Applicant Rank: <input placeholder=\"ex. 2\" [(ngModel)]=\"rank\" /><br /><br />\n\n  <button (click)=\"rankApplicant()\">Rank Applicant</button>\n</div>\n\n<div *ngIf=\"inst\">\n  <h2>Add questions</h2>\n  <br /><br />\n\n  Subject: <input placeholder=\"ex. SE\" [(ngModel)]=\"subjectq\" /><br /><br />\n  Catalog: <input placeholder=\"ex. 3350\" [(ngModel)]=\"catalogq\" /><br /><br />\n  Extension:\n  <input placeholder=\"ex. A,B\" [(ngModel)]=\"extensionq\" /><br /><br />\n\n  <div *ngFor=\"let question of data.numQuestions\">\n    <app-create-question [id]=\"question\"></app-create-question>\n  </div>\n  <div>\n    <button (click)=\"data.addQuestion()\">Add Question</button>\n    <button (click)=\"data.removeQuestion()\">Remove Question</button>\n  </div>\n\n  <button (click)=\"addQuestions()\">Add Questions</button>\n</div>\n\n<div *ngIf=\"inst || admn\">\n  <h2>View applicants</h2>\n  <br /><br />\n\n  Course Catalog:\n  <input placeholder=\"ex. SE\" [(ngModel)]=\"subjecta\" /><br /><br />\n  Course Code:\n  <input placeholder=\"ex. 3350\" [(ngModel)]=\"cataloga\" /><br /><br />\n  Course Extension:\n  <input placeholder=\"ex. B\" [(ngModel)]=\"extensiona\" /><br /><br />\n\n  <button (click)=\"viewApplicants()\">View Applicants</button><br /><br />\n  <div *ngIf=\"rdata\">\n    <p>Displaying search results for {{ rdata[0].courseCode }}</p>\n    <ul class=\"list\">\n      <li *ngFor=\"let r of rdata\" class=\"list-li\">\n        <span>Applicant: {{ r.name }} ({{ r.email }})</span><br />\n        <span>Instructor Ranking: {{ r.instructorRank }}</span\n        ><br />\n        <span>Self Ranking: {{ r.courseRank }}</span\n        ><br />\n        <span>Status: {{ r.status }}</span\n        ><br />\n        <span>Hours: {{ r.hours }}</span\n        ><br /><br />\n        <span>\n          <li *ngFor=\"let s of r.questions; let i = index\" class=\"list-li\">\n            <span>Question {{ i + 1 }}: {{ s.question }}</span\n            ><br />\n            <span>Answer: {{ s.answer }}</span>\n          </li>\n        </span>\n      </li>\n    </ul>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Validator } from '../validator.service';\nimport { ShareDataService } from '../share-data.service';\nimport { Subscription, interval, Observable } from 'rxjs';\n@Component({\n  selector: 'app-application',\n  templateUrl: './application.component.html',\n  styleUrls: ['./application.component.css']\n})\nexport class ApplicationComponent implements OnInit {\n\n  header = { 'Content-Type': 'application/json' };\n  options = ({ headers: this.header });\n  mdata = undefined;\n\n  sub: Subscription;\n  activeUser = '';\n  inst = false;\n  admn = false;\n  labelPosition: 'before' | 'after' = 'before';\n\n  subject = ''; // make upper case\n  catalog = ''; // make upper case\n  extension = ''; // make upper case\n  email = '';\n  name = '';\n  status = 0;\n  newTA = true; // used to select hours\n  hours = 0;\n  courseRank = 0;\n  courseName = '';\n\n  constructor(private http: HttpClient, private val: Validator, public data: ShareDataService)\n  {\n    // every second, update the active user variable\n    this.sub = interval(1000).subscribe(() => {\n      this.activeUser = this.val.getActiveUser();\n\n      if (this.activeUser)\n      {\n        // check to see if this user is an instructor\n        this.http.get(`/api/users/${this.activeUser}`).subscribe((data:any) => {\n\n          if (data.type == \"instructor\")\n          {\n            this.inst = true;\n            this.admn = false;\n          }\n          else if (data.type == \"admin\")\n          {\n            this.admn = true;\n            this.inst = false;\n          }\n        });\n      }\n      else\n      {\n        this.inst = false;\n        this.admn = false;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  // function to sumbit a TA application\n  submitApplication(): void\n  {\n    if (this.activeUser && this.admn && this.subject && this.catalog && this.email && this.name && this.status && this.courseRank)\n    {\n      this.courseName = this.subject.toUpperCase() + this.catalog + this.extension.toUpperCase(); // create course name\n\n      if (this.newTA) // never TAed before\n      {\n        this.hours = 5;\n      }\n      else if (!this.newTA) // has TAed before\n      {\n        this.hours = 10;\n      }\n\n      let body = {\n        name: this.name,\n        status: this.status,\n        hours: this.hours,\n        courseRank: this.courseRank\n      }\n\n      this.http.post(`/api/application/${this.courseName}/${this.email}`, body, this.options).subscribe(() => {\n        alert(`Submitted a TA application for candidate ${this.email} to TA ${this.courseName}`);\n      }, (err => {\n        alert(err.error);\n      })\n      )\n    }\n  }\n\n}\n","<div *ngIf=\"admn\">\n  <h2>Add a TA Application</h2>\n\n  Course Catalog: <input placeholder=\"ex. SE\" [(ngModel)]=\"subject\"><br><br>\n  Course Code: <input placeholder=\"ex. 3350\" [(ngModel)]=\"catalog\"><br><br>\n  Course Extension: <input placeholder=\"ex. B\" [(ngModel)]=\"extension\"><br><br>\n  Candidate Name: <input placeholder=\"ex. Alice\" [(ngModel)]=\"name\"><br><br>\n  Candidate Email: <input placeholder=\"ex alice@uwo.ca\" [(ngModel)]=\"email\"><br><br>\n  Status: <input placeholder=\"ex. 1\" type=\"number\" min=\"1\" max=\"3\" [(ngModel)]=\"status\"><br><br>\n  <mat-checkbox [labelPosition]=\"labelPosition\" [(ngModel)]=\"newTA\">TAed Before?: </mat-checkbox><br><br>\n  Preference Ranking: <input placeholder=\"ex.2\" type=\"number\" min=\"1\" [(ngModel)]=\"courseRank\"><br><br>\n\n  <button (click)=\"submitApplication()\">Submit Application</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Validator } from '../validator.service';\nimport { ShareDataService } from '../share-data.service';\nimport { Subscription, interval, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-matching',\n  templateUrl: './matching.component.html',\n  styleUrls: ['./matching.component.css']\n})\nexport class MatchingComponent implements OnInit {\n\n  header = { 'Content-Type': 'application/json' };\n  options = ({ headers: this.header });\n  mdata = undefined;\n\n  sub: Subscription;\n  activeUser = '';\n  inst = false;\n  admn = false;\n\n  subject = ''; // make upper case\n  catalog = ''; // make upper case\n  extension = ''; // make upper case\n  prior = ''; // make lower case\n  courseName = '';\n\n  constructor(private http: HttpClient, private val: Validator, public data: ShareDataService)\n  {\n    // every second, update the active user variable\n    this.sub = interval(1000).subscribe(() => {\n      this.activeUser = this.val.getActiveUser();\n\n      if (this.activeUser)\n      {\n        // check to see if this user is an instructor\n        this.http.get(`/api/users/${this.activeUser}`).subscribe((data:any) => {\n\n          if (data.type == \"instructor\")\n          {\n            this.inst = true;\n            this.admn = false;\n          }\n          else if (data.type == \"admin\")\n          {\n            this.admn = true;\n            this.inst = false;\n          }\n        });\n      }\n      else\n      {\n        this.inst = false;\n        this.admn = false;\n      }\n    });\n  }\n\n  // function to generate matches\n  generateMatches(): void\n  {\n    if (this.activeUser && (this.inst || this.admn) && this.catalog && this.subject && this.prior)\n    {\n      this.courseName = this.subject.toUpperCase() + this.catalog + this.extension.toUpperCase(); // create course name\n\n      this.http.get(`/api/algorithm/${this.courseName}/${this.activeUser}/${this.prior.toLowerCase()}`).subscribe(() => {\n        alert(`Generated TA matches for course: ${this.courseName}`);\n      }, (err => {\n        alert(err.error);\n      })\n      )\n    }\n    else\n    {\n      alert(\"Invalid input!\");\n    }\n  }\n\n  // function to view matches\n  viewMatches(): void\n  {\n    this.mdata = undefined;\n    if (this.activeUser && (this.inst || this.admn) && this.catalog && this.subject && this.prior)\n    {\n      this.courseName = this.subject.toUpperCase() + this.catalog + this.extension.toUpperCase(); // create course name\n\n      this.http.get(`/api/matches/${this.courseName}/${this.activeUser}`).subscribe((data:any) => {\n        this.mdata = data;\n        alert(`Retrieved TA matches for course: ${this.courseName}`);\n      }, (err => {\n        alert(err.error);\n      })\n      )\n    }\n    else\n    {\n      alert(\"Invalid input!\");\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf = \"inst || admn\">\n  <h2>TA Matching</h2><br><br>\n\n  Course Catalog: <input placeholder=\"ex. SE\" [(ngModel)]=\"subject\"><br><br>\n  Course Code: <input placeholder=\"ex. 3350\" [(ngModel)]=\"catalog\"><br><br>\n  Course Extension: <input placeholder=\"ex. B\" [(ngModel)]=\"extension\"><br><br>\n  Priority: <input placeholder=\"'instructor' or 'applicant'\" [(ngModel)]=\"prior\"><br><br>\n\n  <span>\n    <button (click)=\"generateMatches()\">Generate</button>\n    <button (click)=\"viewMatches()\">View Matches</button>\n  </span><br><br>\n\n  <div *ngIf=\"mdata\">\n    <p>Displaying TA matches for {{courseName}}</p>\n    <ul class=\"list\">\n      <li *ngFor=\"let m of mdata\" class=\"list-li\">\n        <span>TA: {{m.name}} ({{m.email}})</span><br>\n        <span>Hours: {{m.hours}}</span><br><br>\n      </li>\n    </ul>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Account } from '../account'\nimport { Validator } from '../validator.service'\nimport { Subscription, interval, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  account: Account | undefined;\n\n  header = { 'Content-Type': 'application/json' };\n  options = ({ headers: this.header });\n\n  email = '';\n  password = '';\n  emailNew = '';\n  passwordNew = '';\n  passwordCheck = '';\n  oldPassword = '';\n  oldPasswordCheck = '';\n  passwordChange = '';\n  fName = '';\n  lName = '';\n  type = '';\n  id = 0;\n  hours: any;\n  ass: any;\n\n  sub: Subscription;\n  activeUser = '';\n  loggedIn = false;\n\n  constructor(private http: HttpClient, private val: Validator) {\n    this.sub = interval(100).subscribe(() => {\n      this.activeUser = this.val.getActiveUser();\n      if (this.activeUser != \"\")\n      {\n        this.loggedIn = true;\n      }\n    })\n   }\n\n  loginUser(): void {\n    if (this.email && this.password) {\n      const body = {\n        email: this.email,\n        password: this.password\n      };\n\n      this.http.post<Account>(`/api/users/login/${this.email}`, body, this.options).subscribe(() => {\n        alert('User logged in successfully');\n        this.loggedIn = true;\n        this.activeUser = this.email;\n        this.val.setActiveUser(this.email);\n      }, (err => {\n        alert(err.error);\n      }));\n    }\n    else {\n      alert('Missing or invalid inputs!');\n    }\n  }\n\n  logoutUser(): void {\n    this.loggedIn = false;\n    this.activeUser = '';\n    this.val.setActiveUser('');\n  }\n\n  newUser(): void {\n\n    if (this.emailNew && this.passwordNew && this.passwordCheck && this.fName && this.lName && this.id && this.type && this.val.validateNum(this.id, 0, 999999999) && this.password == this.passwordCheck && (this.type == \"student\" || this.type == \"instructor\") && String(this.id).length == 9)\n    {\n\n      if (this.type == \"student\")\n      {\n        this.hours = 0;\n        this.ass = false;\n      }\n      else if (this.type == \"instructor\")\n      {\n        this.hours = null;\n        this.ass = null;\n      }\n\n      const body = {\n        password: this.passwordNew,\n        fName: this.fName,\n        lName: this.lName,\n        idNo: this.id,\n        type: this.type,\n        hours: this.hours,\n        isAssigned: this.ass\n      }\n\n      this.http.post(`/api/users/${this.emailNew}`, body, this.options).subscribe(() => {\n        alert('User account created successfully, please log in')\n      }, (err => {\n        alert(err.error);\n      }))\n    }\n    else {\n      alert('Missing or invalid inputs!');\n    }\n  }\n\n  changePassword(): void {\n\n    if (this.passwordChange && this.passwordCheck && this.oldPassword && this.oldPasswordCheck && this.passwordChange == this.passwordCheck && this.oldPassword == this.oldPasswordCheck && this.passwordChange != this.oldPassword)\n    {\n      const body = {\n        old_password: this.oldPassword,\n        password: this.passwordChange\n      }\n\n      this.http.put(`/api/users/${this.val.getActiveUser()}`, body, this.options).subscribe(() => {\n        alert('Changed password successfully');\n      }, (err => {\n        alert(err.error);\n      }))\n    }\n    else {\n      alert('Missing or invalid inputs!');\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"!loggedIn\">\n\n  <h2>Log in to an account</h2>\n\n  Email: <input placeholder=\"enter email...\" [(ngModel)]=\"email\"><br><br>\n  Password: <input placeholder=\"enter password...\" type=\"password\" [(ngModel)]=\"password\"><br><br>\n\n  <button (click)=\"loginUser()\">Log in</button>\n\n  <h2>Create an account</h2>\n\n  Email: <input placeholder=\"enter email...\" [(ngModel)]=\"emailNew\"><br><br>\n  Password: <input placeholder=\"enter password...\" type=\"password\" [(ngModel)]=\"passwordNew\"><br><br>\n  Confirm Password: <input placeholder=\"enter password again...\" type=\"password\" [(ngModel)]=\"passwordCheck\"><br><br>\n  First Name: <input placeholder=\"enter first name...\" [(ngModel)]=\"fName\"><br><br>\n  Last Name: <input placeholder=\"enter last name...\" [(ngModel)]=\"lName\"><br><br>\n  Account Type: <input placeholder=\"enter 'student' or 'instructor'...\" [(ngModel)]=\"type\"><br><br>\n  Western ID: <input placeholder=\"enter 9-digit id...\" type=\"number\" [(ngModel)]=\"id\"><br><br>\n\n  <button (click)=\"newUser()\">Register</button>\n\n</div>\n\n<div *ngIf=\"loggedIn\">\n  <button (click)=\"logoutUser()\">Log out</button>\n\n  <h2>Change your password</h2>\n\n  Existing Password: <input placeholder=\"enter existing password...\" type=\"password\" [(ngModel)]=\"oldPassword\"><br><br>\n  Confirm Existing Password: <input placeholder=\"enter existing password again...\" type=\"password\" [(ngModel)]=\"oldPasswordCheck\"><br><br>\n  New Password: <input placeholder=\"enter new password...\" type=\"password\" [(ngModel)]=\"passwordChange\"><br><br>\n  Confirm New Password: <input placeholder=\"enter new password again...\" type=\"password\" [(ngModel)]=\"passwordCheck\"><br><br>\n\n  <button (click)=\"changePassword()\">Update Password</button>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShareDataService {\n  numQuestions = new Array();\n  questions = new Array();\n  constructor() { }\n\n  addQuestion(){\n    this.numQuestions.push({num:this.numQuestions.length, display:`Question ${this.numQuestions.length+1}`});\n    this.questions.push(\"\");\n  }\n\n  removeQuestion(){\n    this.numQuestions.pop();\n    this.questions.pop();\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Validator {\n\n  private activerUser: string; // string to keep track of the user who is logged in\n\n  constructor()\n  {\n    this.activerUser = \"\";\n  }\n\n  getActiveUser() // get the value of the active user\n  {\n    return this.activerUser;\n  }\n\n  setActiveUser(val: string) // set the value of the active user\n  {\n    this.activerUser = val;\n  }\n\n  // method to validate a string of a given maximum length\n  public validate(inp: string, len: number)\n  {\n    if ((typeof inp !== \"string\") || (inp.length == 0) || (inp.length > len) || (inp.includes(\"<\")) || (inp.includes(\">\")) || (inp.includes(\"^\")) || (inp.includes(\".\")) || (inp.includes(\"/\")) || (inp.includes(\"(\")) || (inp.includes(\")\")) || (inp.includes(\"*\")) || (inp.includes(\"'\"))  || (inp.includes(\"_\")) || (inp.includes(\"=\")) || (inp.includes(\"$\")) || (inp.includes(\"?\")) || (inp.includes(\"!\")) || (inp.includes(\"%\")) || (inp.includes(\"\\\"\")) || (inp.includes(\"`\")) || (inp.includes(\"+\")) || (inp.includes(\"&\")))\n    {\n      return false;\n    }\n    else\n    {\n      return true;\n    }\n  }\n\n  // method to validate numerical input\n  public validateNum(inp: number, min: number, max: number)\n  {\n    if ((typeof inp === \"number\") && (inp >= min) && (inp <= max))\n    {\n      return true;\n    }\n    else\n    {\n      return false;\n    }\n  }\n\n  // method to validate an email address\n  public validateEmail(inp: string)\n  {\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(inp)) // email must match this pattern\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }\n  }\n\n  // method to validate a string of a given maximum length\n  public validatePass(inp: string, len: number)\n  {\n    if ((typeof inp !== \"string\") || (inp.length == 0) || (inp.length > len) || (inp.includes(\"<\")) || (inp.includes(\">\")) || (inp.includes(\"^\")) || (inp.includes(\".\")) || (inp.includes(\"/\")) || (inp.includes(\"(\")) || (inp.includes(\")\")) || (inp.includes(\"*\")) || (inp.includes(\"'\"))  || (inp.includes(\"_\")) || (inp.includes(\"=\")) || (inp.includes(\"\\\"\")) || (inp.includes(\"`\")) || (inp.includes(\"+\")))\n    {\n      return false;\n    }\n    else\n    {\n      return true;\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}
