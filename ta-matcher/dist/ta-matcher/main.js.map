{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/validator.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'ta-matcher';\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.router.navigate(['']);\r\n  }\r\n}\r\n","<head>\r\n</head>\r\n<body>\r\n    <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n        <div class=\"navbar-nav\">\r\n            <a class=\"nav-item nav-link\" routerLink=\"/\">Home</a><br>\r\n            <a class=\"nav-item nav-link\" routerLink=\"/login\">Login</a><br>\r\n        </div>\r\n    </nav>\r\n    \r\n    <div class=\"jumbotron\">\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-8 offset-sm-2\">\r\n                    <router-outlet></router-outlet>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { appRoutingModule } from './app.routing';\r\nimport { Validator } from './validator.service'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    appRoutingModule\r\n  ],\r\n  providers: [Validator],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n    { path: 'login', component: LoginComponent },\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: '', pathMatch: 'full' }\r\n];\r\n\r\nexport const appRoutingModule = RouterModule.forRoot(routes);","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Account } from '../account'\r\nimport { Validator } from '../validator.service'\r\nimport { Subscription, interval, Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  account: Account | undefined;\r\n\r\n  header = { 'Content-Type': 'application/json' };\r\n  options = ({ headers: this.header });\r\n\r\n  email = '';\r\n  password = '';\r\n  passwordCheck = '';\r\n  oldPassword = '';\r\n  oldPasswordCheck = '';\r\n  fName = '';\r\n  lName = '';\r\n  type = '';\r\n  id = 0;\r\n  hours: any;\r\n  ass: any;\r\n\r\n  sub: Subscription;\r\n  activeUser = '';\r\n  loggedIn = false;\r\n\r\n  constructor(private http: HttpClient, private val: Validator) {\r\n    this.sub = interval(100).subscribe(() => {\r\n      this.activeUser = this.val.getActiveUser();\r\n      if (this.activeUser != \"\")\r\n      {\r\n        this.loggedIn = true;\r\n      }\r\n    })\r\n   }\r\n\r\n  loginUser(): void {\r\n    if (this.email && this.password) {\r\n      const body = {\r\n        email: this.email,\r\n        password: this.password\r\n      };\r\n\r\n      this.http.post<Account>(`/api/users/login/${this.email}`, body, this.options).subscribe(() => {\r\n        alert('User logged in successfully');\r\n        this.loggedIn = true;\r\n        this.activeUser = this.email;\r\n        this.val.setActiveUser(this.email);\r\n      }, (err => {\r\n        alert(err.error);\r\n      }));\r\n    }\r\n    else {\r\n      alert('Missing or invalid inputs!');\r\n    }\r\n  }\r\n\r\n  logoutUser(): void {\r\n    this.loggedIn = false;\r\n    this.activeUser = '';\r\n    this.val.setActiveUser('');\r\n  }\r\n\r\n  newUser(): void {\r\n\r\n    if (this.email && this.password && this.passwordCheck && this.fName && this.lName && this.id && this.type && this.val.validateNum(this.id, 0, 999999999) && this.password == this.passwordCheck && this.type == (\"student\" || \"instructor\") && String(this.id).length == 9)\r\n    {\r\n\r\n      if (this.type == \"student\")\r\n      {\r\n        this.hours = 0;\r\n        this.ass = false;\r\n      }\r\n      else if (this.type == \"instructor\")\r\n      {\r\n        this.hours = null;\r\n        this.ass = null;\r\n      }\r\n\r\n      const body = {\r\n        password: this.password,\r\n        fName: this.fName,\r\n        lName: this.lName,\r\n        idNo: this.id,\r\n        type: this.type,\r\n        hours: this.hours,\r\n        isAssigned: this.ass\r\n      }\r\n\r\n      this.http.post(`/api/users/${this.email}`, body, this.options).subscribe(() => {\r\n        alert('User account created successfully, please log in')\r\n      }, (err => {\r\n        alert(err.error);\r\n      }))\r\n    }\r\n    else {\r\n      alert('Missing or invalid inputs!');\r\n    }\r\n  }\r\n\r\n  changePassword(): void {\r\n\r\n    if (this.password && this.passwordCheck && this.oldPassword && this.oldPasswordCheck && this.password == this.passwordCheck && this.oldPassword == this.oldPasswordCheck && this.password != this.oldPassword)\r\n    {\r\n      const body = {\r\n        old_password: this.oldPassword,\r\n        password: this.password\r\n      }\r\n\r\n      this.http.put(`/api/users/${this.val.getActiveUser()}`, body, this.options).subscribe(() => {\r\n        alert('Changed password successfully');\r\n      }, (err => {\r\n        alert(err.error);\r\n      }))\r\n    }\r\n    else {\r\n      alert('Missing or invalid inputs!');\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"!loggedIn\">\r\n\r\n  <h2>Log in to an account</h2>\r\n\r\n  Email: <input placeholder=\"enter email...\" [(ngModel)]=\"email\"><br><br>\r\n  Password: <input placeholder=\"enter password...\" type=\"password\" [(ngModel)]=\"password\"><br><br>\r\n\r\n  <button (click)=\"loginUser()\">Log in</button>\r\n\r\n  <h2>Create an account</h2>\r\n\r\n  Email: <input placeholder=\"enter email...\" [(ngModel)]=\"email\"><br><br>\r\n  Password: <input placeholder=\"enter password...\" type=\"password\" [(ngModel)]=\"password\"><br><br>\r\n  Confirm Password: <input placeholder=\"enter password again...\" type=\"password\" [(ngModel)]=\"passwordCheck\"><br><br>\r\n  First Name: <input placeholder=\"enter first name...\" [(ngModel)]=\"fName\"><br><br>\r\n  Last Name: <input placeholder=\"enter last name...\" [(ngModel)]=\"lName\"><br><br>\r\n  Account Type: <input placeholder=\"enter 'student' or 'instructor'...\" [(ngModel)]=\"type\"><br><br>\r\n  Western ID: <input placeholder=\"enter 9-digit id...\" type=\"number\" [(ngModel)]=\"id\"><br><br>\r\n\r\n  <button (click)=\"newUser()\">Register</button>\r\n\r\n</div>\r\n\r\n<div *ngIf=\"loggedIn\">\r\n  <button (click)=\"logoutUser()\">Log out</button>\r\n\r\n  <h2>Change your password</h2>\r\n\r\n  Existing Password: <input placeholder=\"enter existing password...\" type=\"password\" [(ngModel)]=\"oldPassword\"><br><br>\r\n  Confirm Existing Password: <input placeholder=\"enter existing password again...\" type=\"password\" [(ngModel)]=\"oldPasswordCheck\"><br><br>\r\n  New Password: <input placeholder=\"enter new password...\" type=\"password\" [(ngModel)]=\"password\"><br><br>\r\n  Confirm New Password: <input placeholder=\"enter new password again...\" type=\"password\" [(ngModel)]=\"passwordCheck\"><br><br>\r\n\r\n  <button (click)=\"changePassword()\">Update Password</button>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class Validator {\r\n\r\n  private activerUser: string; // string to keep track of the user who is logged in\r\n\r\n  constructor()\r\n  {\r\n    this.activerUser = \"\";\r\n  }\r\n\r\n  getActiveUser() // get the value of the active user\r\n  {\r\n    return this.activerUser;\r\n  }\r\n\r\n  setActiveUser(val: string) // set the value of the active user\r\n  {\r\n    this.activerUser = val;\r\n  }\r\n\r\n  // method to validate a string of a given maximum length\r\n  public validate(inp: string, len: number)\r\n  {\r\n    if ((typeof inp !== \"string\") || (inp.length == 0) || (inp.length > len) || (inp.includes(\"<\")) || (inp.includes(\">\")) || (inp.includes(\"^\")) || (inp.includes(\".\")) || (inp.includes(\"/\")) || (inp.includes(\"(\")) || (inp.includes(\")\")) || (inp.includes(\"*\")) || (inp.includes(\"'\"))  || (inp.includes(\"_\")) || (inp.includes(\"=\")) || (inp.includes(\"$\")) || (inp.includes(\"?\")) || (inp.includes(\"!\")) || (inp.includes(\"%\")) || (inp.includes(\"\\\"\")) || (inp.includes(\"`\")) || (inp.includes(\"+\")) || (inp.includes(\"&\")))\r\n    {\r\n      return false;\r\n    }\r\n    else\r\n    {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // method to validate numerical input\r\n  public validateNum(inp: number, min: number, max: number)\r\n  {\r\n    if ((typeof inp === \"number\") && (inp >= min) && (inp <= max))\r\n    {\r\n      return true;\r\n    }\r\n    else\r\n    {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // method to validate an email address\r\n  public validateEmail(inp: string)\r\n  {\r\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(inp)) // email must match this pattern\r\n    {\r\n        return true;\r\n    }\r\n    else\r\n    {\r\n        return false;\r\n    }\r\n  }\r\n\r\n  // method to validate a string of a given maximum length\r\n  public validatePass(inp: string, len: number)\r\n  {\r\n    if ((typeof inp !== \"string\") || (inp.length == 0) || (inp.length > len) || (inp.includes(\"<\")) || (inp.includes(\">\")) || (inp.includes(\"^\")) || (inp.includes(\".\")) || (inp.includes(\"/\")) || (inp.includes(\"(\")) || (inp.includes(\")\")) || (inp.includes(\"*\")) || (inp.includes(\"'\"))  || (inp.includes(\"_\")) || (inp.includes(\"=\")) || (inp.includes(\"\\\"\")) || (inp.includes(\"`\")) || (inp.includes(\"+\")))\r\n    {\r\n      return false;\r\n    }\r\n    else\r\n    {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}