{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/instructor-view/instructor-view.component.ts","./src/app/instructor-view/instructor-view.component.html","./src/app/application/application.component.ts","./src/app/application/application.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/validator.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ta-matcher';\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.router.navigate(['']);\n  }\n}\n","<head>\n</head>\n<body>\n    <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n        <div class=\"navbar-nav\">\n            <a class=\"nav-item nav-link\" routerLink=\"/\">Home</a><br>\n            <a class=\"nav-item nav-link\" routerLink=\"/login\">Login</a><br>\n        </div>\n    </nav>\n    <app-instructor-view></app-instructor-view>\n\n    <div class=\"jumbotron\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-sm-8 offset-sm-2\">\n                    <router-outlet></router-outlet>\n                </div>\n            </div>\n        </div>\n    </div>\n    <app-application></app-application>\n</body>\n\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { appRoutingModule } from './app.routing';\nimport { Validator } from './validator.service';\nimport { InstructorViewComponent } from './instructor-view/instructor-view.component'\nimport { ApplicationComponent } from './application/application.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    InstructorViewComponent,\n    ApplicationComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    appRoutingModule\n  ],\n  providers: [Validator],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n    { path: 'login', component: LoginComponent },\n    // otherwise redirect to home\n    { path: '**', redirectTo: '', pathMatch: 'full' }\n];\n\nexport const appRoutingModule = RouterModule.forRoot(routes);","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Validator } from '../validator.service';\nimport { Subscription, interval, Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-instructor-view',\n  templateUrl: './instructor-view.component.html',\n  styleUrls: ['./instructor-view.component.css']\n})\nexport class InstructorViewComponent implements OnInit {\n\n  header = { 'Content-Type': 'application/json' };\n  options = ({ headers: this.header });\n\n  sub: Subscription;\n  activeUser = '';\n  instruct = false;\n  catalog = ''; // make upper case\n  subject = ''; // make upper case\n  extension = ''; // make upper case\n  instructor=''; // get from active account\n  hours=0;\n  numStudent=0;\n  desc=''; // make descriptions upper case before sending to back end\n  instructorName='';\n  email = '';\n  courseCode = '';\n  rank = '';\n\n  constructor(private http: HttpClient, private val: Validator)\n  {\n    // every second, update the active user variable\n    this.sub = interval(100).subscribe(() => {\n      this.activeUser = this.val.getActiveUser();\n\n      if (this.activeUser)\n      {\n        // check to see if this user is an instructor\n        this.http.get(`/api/users/${this.activeUser}`).subscribe((data:any) => {\n          if (data.type === \"instructor\") // if user is an admin\n          {\n            this.instruct = true; // reveal admin level content\n            this.instructorName = data.fName + \" \" + data.lName; // build instructor name\n          }\n          else // if user is not an admin\n          {\n            this.instruct = false; // hide admin level content\n          }\n        })\n      }\n      else\n      {\n        this.instruct = false;\n      }\n      console.log(this.instruct);\n    });\n  }\n\n  rankApplicant(): void {\n    const body = {\n      rank: this.rank,\n      email: this.email,\n      courseCode: this.courseCode\n    }\n\n    this.http.post('/api/rank', body, this.options).subscribe(() => {\n      alert(`Applicant ${this.email} for ${this.courseCode} ranked ${this.rank}`);\n    }, (err => {\n      alert(err.error);\n    })\n    )\n  }\n\n  addCourse(): void {\n    if (this.instruct && this.subject && this.catalog && this.extension && this.hours && this.numStudent && this.desc && this.instructorName)\n    {\n      const courseName = this.subject + this.catalog + this.extension; // create course name\n      const body = {\n        instructor: this.instructorName,\n        instructorEmail: this.activeUser,\n        hours: this.hours,\n        enrolled: this.numStudent,\n        desc: this.desc.toUpperCase()\n      }\n\n      this.http.post(`/api/courses/${courseName.toUpperCase()}`, body, this.options).subscribe(() => {\n        alert(`Created course with name: ${courseName}`);\n      }, (err => {\n        alert(err.error);\n      })\n      )\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf = \"instruct == true\">\n  <h2>Post a course</h2><br><br>\n\n  Subject: <input placeholder=\"ex. SE\" [(ngModel)]=\"subject\"><br><br>\n  Catalog: <input placeholder=\"ex. 3350\" [(ngModel)]=\"catalog\"><br><br>\n  Extension: <input placeholder=\"ex. A,B\" [(ngModel)]=\"extension\"><br><br>\n  Hours: <input placeholder=\"ex. 30\" type=\"number\" [(ngModel)]=\"hours\"><br><br>\n  Number of Students: <input placeholder=\"ex. 100\" type=\"number\" [(ngModel)]=\"numStudent\"><br><br>\n  Description: <input placeholder=\"\" [(ngModel)]=\"desc\"><br><br>\n\n  <button (click)=\"addCourse()\">Create Course</button>\n\n  <br><br><br><h2>Rank applicants</h2><br><br>\n\n  Applicant Email: <input placeholder=\"ex. bob@uwo.ca\" [(ngModel)]=\"email\"><br><br>\n  Course Code: <input placeholder=\"ex. SE3350\" [(ngModel)]=\"courseCode\"><br><br>\n  Applicant Rank: <input placeholder=\"ex. 2\" [(ngModel)]=\"rank\"><br><br>\n\n  <button (click)=\"rankApplicant()\">Rank Applicant</button><br><br>\n\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Subscription, interval} from 'rxjs';\nimport { Validator } from '../validator.service';\n\n@Component({\n  selector: 'app-application',\n  templateUrl: './application.component.html',\n  styleUrls: ['./application.component.css']\n})\nexport class ApplicationComponent implements OnInit {\n\n  options = [{display: \"Yes\", value: true}, {display:\"No\", value: false}];\n  @Input() course: string | undefined;\n  @Input() courseTaken: Boolean | undefined;\n  @Input() courseLoc: string | undefined;\n  @Input() courseTAd: Boolean | undefined;\n  @Input() prevExp: string | undefined;\n\n  sub: Subscription;\n  activeUser = \"\";\n  isStudent: Boolean = false;\n  studentEmail: string | undefined;\n\n  constructor(private http: HttpClient, public validator: Validator) {\n    this.sub = interval(100).subscribe(() => {\n      this.activeUser = this.validator.getActiveUser();\n\n      if (this.activeUser)\n      {\n        // check to see if this user is a student\n        this.http.get(`/api/users/${this.activeUser}`).subscribe((data:any) => {\n          if (data.type === \"student\") // if user is a student\n          {\n            this.isStudent = true;\n            this.studentEmail = data.email;\n          }\n          else // if user is not a student\n          {\n            this.isStudent = false;\n          }\n        })\n      }\n      else\n      {\n        this.isStudent = false;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  submitApplication(){\n    if(confirm(\"Are you sure to submit this application?\")){\n      this.http.post<any>(`/api/application/${this.studentEmail}`, {base: [this.course, this.courseTaken, this.courseLoc,this.courseTAd, this.prevExp]}).subscribe((data:any) => {\n        alert(\"Application submitted\");\n      })\n    }\n  }\n\n}\n","<div class=\"form\" *ngIf=\"this.isStudent\">\n  <h2>Apply</h2>\n  <div>\n    Course:\n    <input [(ngModel)]=\"course\" placeholder=\"Course e.g. SE2202A\">\n  </div>\n  <div>\n    Have you taken this course before?\n    <select [(ngModel)]=\"courseTaken\">\n      <option *ngFor=\"let x of options\" [ngValue]=\"x.value\">{{x.display}}</option>\n    </select>\n  </div>\n  <div *ngIf=\"courseTaken == true\">\n    Where did you take this course?\n    <input [(ngModel)]=\"courseLoc\" placeholder=\"University e.g. Western University\">\n  </div>\n  <div>\n    Have you TA'd this course before?\n    <select [(ngModel)]=\"courseTAd\">\n      <option *ngFor=\"let x of options\" [ngValue]=\"x.value\">{{x.display}}</option>\n    </select>\n  </div>\n  <div>\n    List any previous TA experience\n    <textarea [(ngModel)]=\"prevExp\"></textarea>\n  </div>\n  <button (click)=\"submitApplication()\">Submit</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Account } from '../account'\nimport { Validator } from '../validator.service'\nimport { Subscription, interval, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  account: Account | undefined;\n\n  header = { 'Content-Type': 'application/json' };\n  options = ({ headers: this.header });\n\n  email = '';\n  password = '';\n  passwordCheck = '';\n  oldPassword = '';\n  oldPasswordCheck = '';\n  fName = '';\n  lName = '';\n  type = '';\n  id = 0;\n  hours: any;\n  ass: any;\n\n  sub: Subscription;\n  activeUser = '';\n  loggedIn = false;\n\n  constructor(private http: HttpClient, private val: Validator) {\n    this.sub = interval(100).subscribe(() => {\n      this.activeUser = this.val.getActiveUser();\n      if (this.activeUser != \"\")\n      {\n        this.loggedIn = true;\n      }\n    })\n   }\n\n  loginUser(): void {\n    if (this.email && this.password) {\n      const body = {\n        email: this.email,\n        password: this.password\n      };\n\n      this.http.post<Account>(`/api/users/login/${this.email}`, body, this.options).subscribe(() => {\n        alert('User logged in successfully');\n        this.loggedIn = true;\n        this.activeUser = this.email;\n        this.val.setActiveUser(this.email);\n      }, (err => {\n        alert(err.error);\n      }));\n    }\n    else {\n      alert('Missing or invalid inputs!');\n    }\n  }\n\n  logoutUser(): void {\n    this.loggedIn = false;\n    this.activeUser = '';\n    this.val.setActiveUser('');\n  }\n\n  newUser(): void {\n\n    if (this.email && this.password && this.passwordCheck && this.fName && this.lName && this.id && this.type && this.val.validateNum(this.id, 0, 999999999) && this.password == this.passwordCheck && (this.type == \"student\" || this.type == \"instructor\") && String(this.id).length == 9)\n    {\n\n      if (this.type == \"student\")\n      {\n        this.hours = 0;\n        this.ass = false;\n      }\n      else if (this.type == \"instructor\")\n      {\n        this.hours = null;\n        this.ass = null;\n      }\n\n      const body = {\n        password: this.password,\n        fName: this.fName,\n        lName: this.lName,\n        idNo: this.id,\n        type: this.type,\n        hours: this.hours,\n        isAssigned: this.ass\n      }\n\n      this.http.post(`/api/users/${this.email}`, body, this.options).subscribe(() => {\n        alert('User account created successfully, please log in')\n      }, (err => {\n        alert(err.error);\n      }))\n    }\n    else {\n      alert('Missing or invalid inputs!');\n    }\n  }\n\n  changePassword(): void {\n\n    if (this.password && this.passwordCheck && this.oldPassword && this.oldPasswordCheck && this.password == this.passwordCheck && this.oldPassword == this.oldPasswordCheck && this.password != this.oldPassword)\n    {\n      const body = {\n        old_password: this.oldPassword,\n        password: this.password\n      }\n\n      this.http.put(`/api/users/${this.val.getActiveUser()}`, body, this.options).subscribe(() => {\n        alert('Changed password successfully');\n      }, (err => {\n        alert(err.error);\n      }))\n    }\n    else {\n      alert('Missing or invalid inputs!');\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div *ngIf=\"!loggedIn\">\n\n  <h2>Log in to an account</h2>\n\n  Email: <input placeholder=\"enter email...\" [(ngModel)]=\"email\"><br><br>\n  Password: <input placeholder=\"enter password...\" type=\"password\" [(ngModel)]=\"password\"><br><br>\n\n  <button (click)=\"loginUser()\">Log in</button>\n\n  <h2>Create an account</h2>\n\n  Email: <input placeholder=\"enter email...\" [(ngModel)]=\"email\"><br><br>\n  Password: <input placeholder=\"enter password...\" type=\"password\" [(ngModel)]=\"password\"><br><br>\n  Confirm Password: <input placeholder=\"enter password again...\" type=\"password\" [(ngModel)]=\"passwordCheck\"><br><br>\n  First Name: <input placeholder=\"enter first name...\" [(ngModel)]=\"fName\"><br><br>\n  Last Name: <input placeholder=\"enter last name...\" [(ngModel)]=\"lName\"><br><br>\n  Account Type: <input placeholder=\"enter 'student' or 'instructor'...\" [(ngModel)]=\"type\"><br><br>\n  Western ID: <input placeholder=\"enter 9-digit id...\" type=\"number\" [(ngModel)]=\"id\"><br><br>\n\n  <button (click)=\"newUser()\">Register</button>\n\n</div>\n\n<div *ngIf=\"loggedIn\">\n  <button (click)=\"logoutUser()\">Log out</button>\n\n  <h2>Change your password</h2>\n\n  Existing Password: <input placeholder=\"enter existing password...\" type=\"password\" [(ngModel)]=\"oldPassword\"><br><br>\n  Confirm Existing Password: <input placeholder=\"enter existing password again...\" type=\"password\" [(ngModel)]=\"oldPasswordCheck\"><br><br>\n  New Password: <input placeholder=\"enter new password...\" type=\"password\" [(ngModel)]=\"password\"><br><br>\n  Confirm New Password: <input placeholder=\"enter new password again...\" type=\"password\" [(ngModel)]=\"passwordCheck\"><br><br>\n\n  <button (click)=\"changePassword()\">Update Password</button>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Validator {\n\n  private activerUser: string; // string to keep track of the user who is logged in\n\n  constructor()\n  {\n    this.activerUser = \"\";\n  }\n\n  getActiveUser() // get the value of the active user\n  {\n    return this.activerUser;\n  }\n\n  setActiveUser(val: string) // set the value of the active user\n  {\n    this.activerUser = val;\n  }\n\n  // method to validate a string of a given maximum length\n  public validate(inp: string, len: number)\n  {\n    if ((typeof inp !== \"string\") || (inp.length == 0) || (inp.length > len) || (inp.includes(\"<\")) || (inp.includes(\">\")) || (inp.includes(\"^\")) || (inp.includes(\".\")) || (inp.includes(\"/\")) || (inp.includes(\"(\")) || (inp.includes(\")\")) || (inp.includes(\"*\")) || (inp.includes(\"'\"))  || (inp.includes(\"_\")) || (inp.includes(\"=\")) || (inp.includes(\"$\")) || (inp.includes(\"?\")) || (inp.includes(\"!\")) || (inp.includes(\"%\")) || (inp.includes(\"\\\"\")) || (inp.includes(\"`\")) || (inp.includes(\"+\")) || (inp.includes(\"&\")))\n    {\n      return false;\n    }\n    else\n    {\n      return true;\n    }\n  }\n\n  // method to validate numerical input\n  public validateNum(inp: number, min: number, max: number)\n  {\n    if ((typeof inp === \"number\") && (inp >= min) && (inp <= max))\n    {\n      return true;\n    }\n    else\n    {\n      return false;\n    }\n  }\n\n  // method to validate an email address\n  public validateEmail(inp: string)\n  {\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(inp)) // email must match this pattern\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }\n  }\n\n  // method to validate a string of a given maximum length\n  public validatePass(inp: string, len: number)\n  {\n    if ((typeof inp !== \"string\") || (inp.length == 0) || (inp.length > len) || (inp.includes(\"<\")) || (inp.includes(\">\")) || (inp.includes(\"^\")) || (inp.includes(\".\")) || (inp.includes(\"/\")) || (inp.includes(\"(\")) || (inp.includes(\")\")) || (inp.includes(\"*\")) || (inp.includes(\"'\"))  || (inp.includes(\"_\")) || (inp.includes(\"=\")) || (inp.includes(\"\\\"\")) || (inp.includes(\"`\")) || (inp.includes(\"+\")))\n    {\n      return false;\n    }\n    else\n    {\n      return true;\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}